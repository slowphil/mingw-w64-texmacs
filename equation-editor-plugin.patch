From 5b12d8d7fdce569c87aa38353957b74f899be63e Mon Sep 17 00:00:00 2001
From: pj <pj@spamgourmet.com>
Date: Fri, 31 Dec 2021 09:46:08 +0100
Subject: [PATCH 1/2] allow preference widgets for plugins

---
 .../32x32/settings/tm_plugins_prefs.xpm       | 90 +++++++++++++++++++
 TeXmacs/progs/kernel/texmacs/tm-plugins.scm   | 30 ++++---
 .../texmacs/menus/preferences-widgets.scm     | 19 ++++
 3 files changed, 126 insertions(+), 13 deletions(-)
 create mode 100644 TeXmacs/misc/pixmaps/modern/32x32/settings/tm_plugins_prefs.xpm

diff --git a/TeXmacs/misc/pixmaps/modern/32x32/settings/tm_plugins_prefs.xpm b/TeXmacs/misc/pixmaps/modern/32x32/settings/tm_plugins_prefs.xpm
new file mode 100644
index 00000000..747661de
--- /dev/null
+++ b/TeXmacs/misc/pixmaps/modern/32x32/settings/tm_plugins_prefs.xpm
@@ -0,0 +1,90 @@
+/* XPM */
+static char *plugins_prefs[] = {
+/* columns rows colors chars-per-pixel */
+"32 32 52 1 ",
+"  c gray50",
+". c #808080",
+"X c #818181",
+"o c gray51",
+"O c #838383",
+"+ c #848484",
+"@ c gray52",
+"# c #868686",
+"$ c gray53",
+"% c #888888",
+"& c gray54",
+"* c gray55",
+"= c #8D8D8D",
+"- c #8E8E8E",
+"; c gray56",
+": c gray57",
+"> c #929292",
+", c #939393",
+"< c #959595",
+"1 c #979797",
+"2 c #989898",
+"3 c gray60",
+"4 c #9A9A9A",
+"5 c #9B9B9B",
+"6 c #9D9D9D",
+"7 c gray64",
+"8 c #A4A4A4",
+"9 c #A5A5A5",
+"0 c gray65",
+"q c #A7A7A7",
+"w c #A9A9A9",
+"e c #AAAAAA",
+"r c gray67",
+"t c #ACACAC",
+"y c gray68",
+"u c #AEAEAE",
+"i c #AFAFAF",
+"p c gray69",
+"a c #B2B2B2",
+"s c #B4B4B4",
+"d c gray71",
+"f c #B6B6B6",
+"g c #B7B7B7",
+"h c gray72",
+"j c #B9B9B9",
+"k c #BBBBBB",
+"l c #BCBCBC",
+"z c gray74",
+"x c gray",
+"c c gray75",
+"v c #C0C0C0",
+"b c None",
+/* pixels */
+"bbbbb.bbbbbb.bbbbbbbbbbbbbbbbbbb",
+"bbbb.#.bbb..#.bbbbbbbbbbbbbbbbbb",
+"bbb.*c%.bb.<c.bbbbbbbbbbbbbbbbbb",
+"bbb.:v*.bb#6v..bbbbbbbbbbbbbbbbb",
+"bbb.*v*.bb.4v..bbbbbbbbbbbbbbbbb",
+"bbb.:v*.bb#4v..bbbbbbbbbbbbbbbbb",
+"bbb.*v*.bb.6v..bbbbbbbbbbbbbbbbb",
+"b...:v*....6v.  .bbbbbbbbbbbbbbb",
+".%aasvaiiiisvaii.bbbbbbbbbbbbbbb",
+".*ccvvvvvvvvvvcc.bbbbbbbbbbbbbbb",
+".*vvvvvvvvvvvvvc.bbbbbbbbbbbbbbb",
+".*vvvvvvvvvvvvvc.bbbbbbbbbbbbbbb",
+".*vvvvvvvvvvvvvc.bbbbbbbbbbbbbbb",
+".%vvvvvvvvvvvvch.bbbbbbbbbbbbbbb",
+"b.cvvvvvvvvvvvvi.bbbbbbbbbbbbbbb",
+"b.7vvvvvvvvvvvv<.bbbbbbbbbbbbbbb",
+"b.#hvvvvvvvvvvi.bbbbbb....     b",
+"bb.*cvvvvvvvva#.bbbbb..49eieei<.",
+"bbb.%ivvvvvv9..bbbb..<cvvvvvvv7.",
+"bbbb..%6ch4%..bbbbb.4vh4# ......",
+"bbbbbb..hi  bbbbbb.%ch%..bbbbbbb",
+"bbbbbbb.ci.bbbbbbb.9v:.bbbbbbbbb",
+"bbbbbbb hi.bbbbbbb.ss.bbbbbbbbbb",
+"bbbbbbb ci.bbbbbbb.ci.bbbbbbbbbb",
+"bbbbbbb.ss.bbbbbb.%v9.bbbbbbbbbb",
+"bbbbbbb.9v%.bbbbb.4v4.bbbbbbbbbb",
+"bbbbbbb.*ce .bbb.#ch# bbbbbbbbbb",
+"bbbbbbbb.9ve#...*hv<.bbbbbbbbbbb",
+"bbbbbbbb..evhiisvv6.bbbbbbbbbbbb",
+"bbbbbbbbb..:icvh9%..bbbbbbbbbbbb",
+"bbbbbbbbbbb.......bbbbbbbbbbbbbb",
+"bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb"
+};
diff --git a/TeXmacs/progs/kernel/texmacs/tm-plugins.scm b/TeXmacs/progs/kernel/texmacs/tm-plugins.scm
index af0f36e1..e5e9569d 100644
--- a/TeXmacs/progs/kernel/texmacs/tm-plugins.scm
+++ b/TeXmacs/progs/kernel/texmacs/tm-plugins.scm
@@ -530,24 +530,28 @@
   (with l (ahash-table->list plugin-initialize-todo)
     (not (list-or (map cdr l)))))
 
+(tm-define plugins-with-pref-widget '())
+
 (define-public (plugin-initialize name*)
   "Initialize plugin with name @name*"
   (plugin-load-setup)
   (if (ahash-ref plugin-initialize-todo name*)
       (let* ((name (symbol->string name*))
-             (file (string-append "plugins/" name "/progs/init-" name ".scm"))
-             (u (url-unix "$TEXMACS_HOME_PATH:$TEXMACS_PATH" file)))
-        (ahash-set! plugin-initialize-todo name* #f)
-        (if (url-exists? u)
-            (with fname (url-materialize u "r")
-              ;;(display* "loading plugin " name* "\n")
-              ;;(display* "loading plugin " fname "\n")
-              ;;(with start (texmacs-time)
-              ;;  (load fname)
-              ;;  (display* name " -> " (- (texmacs-time) start) " ms\n"))
-              (load fname)
-              ))
-        (if (plugin-all-initialized?) (plugin-save-setup)))))
+	     (file (string-append "plugins/" name "/progs/init-" name ".scm"))
+	     (u (url-unix "$TEXMACS_HOME_PATH:$TEXMACS_PATH" file)))
+	(ahash-set! plugin-initialize-todo name* #f)
+	(if (url-exists? u)
+	    (with fname (url-materialize u "r")
+	      ;;(display* "loading plugin " name* "\n")
+	      ;;(display* "loading plugin " fname "\n")
+	      ;;(with start (texmacs-time)
+	      ;;  (load fname)
+	      ;;  (display* name " -> " (- (texmacs-time) start) " ms\n"))
+	      (load fname)
+	      ))
+    (if (defined? (string->symbol (string-append name "-preferences-widget")))
+       (set! plugins-with-pref-widget (rcons plugins-with-pref-widget name) ))
+	(if (plugin-all-initialized?) (plugin-save-setup)))))
 
 (define-public (lazy-plugin-initialize name)
   "Initialize the plug-in @name in a lazy way"
diff --git a/TeXmacs/progs/texmacs/menus/preferences-widgets.scm b/TeXmacs/progs/texmacs/menus/preferences-widgets.scm
index 035ecf5f..1fcc263d 100644
--- a/TeXmacs/progs/texmacs/menus/preferences-widgets.scm
+++ b/TeXmacs/progs/texmacs/menus/preferences-widgets.scm
@@ -876,6 +876,21 @@
     ======
     (dynamic (experimental-preferences-widget))))
 
+;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
+;; Tabs for plugins that define a preference widget
+;; (such widget must be called pluginname-preferences-widget and defined
+;; in pluginname.scm or init-pluginname.scm inside the pluginname/prog subdir)
+;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
+
+(tm-widget (plugins-preferences-widget)
+  (assuming (list>0? plugins-with-pref-widget)
+  ===
+  (padded
+    (tabs (loop (plug plugins-with-pref-widget)
+              (tab (text (upcase-first plug))
+                    (centered (dynamic (eval `(,(string->symbol (string-append plug "-preferences-widget"))))))))))
+  ===))
+
 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 ;; Preferences widget
 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
@@ -901,6 +916,10 @@
         (icon-tab "tm_prefs_security.xpm" (text "Security")
           (centered
             (dynamic (security-preferences-widget)))))
+     (assuming (list>0? plugins-with-pref-widget)
+       (icon-tab "tm_plugins_prefs.xpm" (text "Plugins")
+         (centered
+           (dynamic (plugins-preferences-widget)))))
       (icon-tab "tm_prefs_other.xpm" (text "Other")
         (centered
           (dynamic (other-preferences-widget)))))))
-- 
2.17.1


From 6a696e2e14c07b0e2fff64679337aa00be59f004 Mon Sep 17 00:00:00 2001
From: pj <pj@spamgourmet.com>
Date: Wed, 29 Dec 2021 01:57:39 +0100
Subject: [PATCH 2/2] better separation of Equation Editor plugin

---
 TeXmacs/doc/main/convert/man-convert.en.tm    |  17 +-
 .../main/convert/man-graphics-export.en.tm    |  84 +++
 .../misc/inkscape_extension/texmacs_reedit.py | 245 --------
 TeXmacs/progs/convert/images/tmimage.scm      | 548 ++++++++++++------
 .../texmacs/menus/preferences-widgets.scm     |  44 +-
 .../doc/man-equation-editor.en.tm             | 155 +++++
 .../misc/SVG_and_Texmacs-L-0.3.oxt            | Bin 0 -> 49099 bytes
 .../misc/inkscape_extension/texmacs.inx       |   0
 .../misc/inkscape_extension/texmacs_latex.sty |   0
 .../misc/inkscape_extension/texmacs_reedit.py | 411 +++++++++++++
 .../progs/init-equation-editor.scm            | 271 +++++++++
 src/System/Boot/init_texmacs.cpp              |  25 -
 12 files changed, 1316 insertions(+), 484 deletions(-)
 create mode 100644 TeXmacs/doc/main/convert/man-graphics-export.en.tm
 delete mode 100755 TeXmacs/misc/inkscape_extension/texmacs_reedit.py
 create mode 100644 plugins/equation-editor/doc/man-equation-editor.en.tm
 create mode 100644 plugins/equation-editor/misc/SVG_and_Texmacs-L-0.3.oxt
 rename {TeXmacs => plugins/equation-editor}/misc/inkscape_extension/texmacs.inx (100%)
 rename {TeXmacs => plugins/equation-editor}/misc/inkscape_extension/texmacs_latex.sty (100%)
 create mode 100755 plugins/equation-editor/misc/inkscape_extension/texmacs_reedit.py
 create mode 100644 plugins/equation-editor/progs/init-equation-editor.scm

diff --git a/TeXmacs/doc/main/convert/man-convert.en.tm b/TeXmacs/doc/main/convert/man-convert.en.tm
index 0669eca1..d8e023d7 100644
--- a/TeXmacs/doc/main/convert/man-convert.en.tm
+++ b/TeXmacs/doc/main/convert/man-convert.en.tm
@@ -1,4 +1,4 @@
-<TeXmacs|1.99.2>
+<TeXmacs|1.99.5>
 
 <style|<tuple|tmdoc|english>>
 
@@ -6,8 +6,9 @@
   <tmdoc-title|Compatibility with other formats>
 
   <TeXmacs> documents can be saved without loss of information in three
-  formats: the native <TeXmacs> format, <name|Xml> and as a <name|Scheme>
-  expression. <TeXmacs> documents can be converted in a <em|wysiwyg>
+  formats: the native <TeXmacs> format (file extension <verbatim|.tm>),
+  <name|Xml> (<verbatim|.tmml>) and as a <name|Scheme> expression
+  (<verbatim|.stm>). <TeXmacs> documents can be converted in a <em|wysiwyg>
   (what-you-see-is-what-you-get) way to either <name|Postscript> or
   <name|Pdf>, which are used as the primary formats for <hlink|printing
   documents|../start/man-print.en.tm>. <TeXmacs> finally provides converters
@@ -30,7 +31,13 @@
     <branch|Adding new converters|new/man-newconv.en.tm>
   </traverse>
 
-  <tmdoc-copyright|1998--2002|Joris van der Hoeven>
+  Finally, along with the above textual formats, <TeXmacs> document fragments
+  can also be <hlink|exported to many vector or raster image
+  formats|man-graphics-export.en.tm> either as files or through copy-paste
+  (so that <hlink|<TeXmacs> can be used as a <em|wysiwyg> equation
+  editor|man-equation-editor.en.tm>).\ 
+
+  <tmdoc-copyright|1998--2016|Joris van der Hoeven and the <TeXmacs> team>
 
   <tmdoc-license|Permission is granted to copy, distribute and/or modify this
   document under the terms of the GNU Free Documentation License, Version 1.1
@@ -38,4 +45,4 @@
   Invariant Sections, with no Front-Cover Texts, and with no Back-Cover
   Texts. A copy of the license is included in the section entitled "GNU Free
   Documentation License".>
-</body>
\ No newline at end of file
+</body>
diff --git a/TeXmacs/doc/main/convert/man-graphics-export.en.tm b/TeXmacs/doc/main/convert/man-graphics-export.en.tm
new file mode 100644
index 00000000..9c2212a0
--- /dev/null
+++ b/TeXmacs/doc/main/convert/man-graphics-export.en.tm
@@ -0,0 +1,84 @@
+<TeXmacs|1.99.21>
+
+<style|<tuple|tmdoc|doc|british|old-spacing|old-dots|old-lengths>>
+
+<\body>
+  <tmdoc-title|Export or Copy selection to graphics>
+
+  <TeXmacs> can export the active selection to many graphical formats, either
+  as files (<menu|File|Export|Export selection as image>) or through the
+  system clipboard (<menu|Edit|Copy to...|Image>), for pasting into other
+  applications.
+
+  <paragraph|Specifying graphics format> \ 
+
+  In case of file export, the desired graphical format is determined by the
+  file extension which you must explicitly provide (for instance: pdf, eps,
+  jpg...).
+
+  For the clipboard mechanism, you need to set in advance the desired format
+  in <menu|Edit|Preferences|Converters|TeXmacs -\<gtr\> image|Format>. This
+  menu offers a choice between <acronym|png>, <acronym|jpeg>, <acronym|tif,>
+  <acronym|eps,> <acronym|svg> and <name|pdf> formats, provided a suitable
+  converter is available (see below).
+
+  For both the clipboard mechanism and file export, the image produced can be
+  scaled up or down compared to <TeXmacs>'s nominal printed output size. The
+  scaling factor is set by the preference
+  <menu|Edit|Preferences|Converters|TeXmacs -\<gtr\> image|Output scale
+  factor>
+
+  As well, the resolution of bitmap formats is set by the prefrence
+  <menu|Edit|Preferences|Converters|TeXmacs -\<gtr\> image|Bitmap resolution
+  (dpi)>
+
+  <paragraph|Required external converters><label|external converters>
+
+  <TeXmacs> can natively produce PostScript or PDF vector images.\ 
+
+  In order to produce the various other graphic formats <TeXmacs> relies on
+  external converters (defined in <verbatim|$TEXMACS_PATH/progs/convert/images/init-images.scm>):\ 
+
+  <\itemize-dot>
+    <item><name|Ghostscript>
+
+    <item><name|pdf2svg>, for <acronym|svg> output (<hlink|to work with
+    <name|Inkscape>|man-equation-editor.en.tm>, for instance),
+
+    <item><name|pdftocairo> (from the <name|Poppler> project) can can produce
+    both vector (<acronym|svg>) and raster formats \ (<acronym|png><name|>,
+    <acronym|jpg>).
+
+    <item><name|ImageMagick>, for raster formats
+
+    <item><hlink|Additional converters|new/man-newconv.en.tm> can be defined,
+    if needed. \ 
+  </itemize-dot>
+
+  All these converters need to be in the system PATH. If they are not found,
+  <TeXmacs> displays an error message in its status bar when attempting a
+  conversion. On <name|Linux> if these external tools are not already
+  installed, they are easy to install from your distribution's package
+  manager. On <name|MacOS>, <name|pdf2svg> and <name|ImageMagick> (as well as
+  <name|Inkscape>) are available from <name|MacPorts>. On <name|Windows>,
+  <name|pdftocairo> is bundled with <TeXmacs> at this website:
+  <code*|https://github.com/slowphil/mingw-w64-texmacs/releases>
+
+  \;
+
+  <tmdoc-copyright|2016|the <TeXmacs> team>
+
+  <tmdoc-license|Permission is granted to copy, distribute and/or modify this
+  document under the terms of the GNU Free Documentation License, Version 1.1
+  or any later version published by the Free Software Foundation; with no
+  Invariant Sections, with no Front-Cover Texts, and with no Back-Cover
+  Texts. A copy of the license is included in the section entitled "GNU Free
+  Documentation License".>
+
+  \;
+
+  \;
+</body>
+
+<initial|<\collection>
+</collection>>
\ No newline at end of file
diff --git a/TeXmacs/misc/inkscape_extension/texmacs_reedit.py b/TeXmacs/misc/inkscape_extension/texmacs_reedit.py
deleted file mode 100755
index 13512b2f..00000000
--- a/TeXmacs/misc/inkscape_extension/texmacs_reedit.py
+++ /dev/null
@@ -1,245 +0,0 @@
-#!/usr/bin/env python
-"""
-*******************************************************************************
-* Texmacs extension for Inkscape
-* COPYRIGHT  : (C) 2012 Philippe JOYEZ and the TeXmacs team
-*******************************************************************************
-* This software falls under the GNU general public license version 3 or later.
-* It comes WITHOUT ANY WARRANTY WHATSOEVER. For details, see the file LICENSE
-* in the root directory or <http://www.gnu.org/licenses/gpl-3.0.html>.
-*******************************************************************************
-this files goes into ~/.config/Inkscape/extensions
-
-This extension allows to (re-)edit mathematical equations in WYSIWYG 
-way with TeXmacs. It works with equations originally produced by 
-versions of TeXmacs <https://www.texmacs.org> dated after july 2012, 
-but also with those made by the Textext.ink Inkscape extension
-(http://www.iki.fi/pav/software/textext/).
-
-For that, it extracts the TeXmacs (or Latex) description of the equation,
-creates on the fly a texmacs file and calls texmacs to edit the equation.
-On return, Texmacs generates an svg file containing the upadted image
-and description of the equation, which then replaces the old equation.
-
-If no equation exists when the extension is invoked, then a new
-equation is created.
-
-We invoke TeXmacs with a command line argument that displays "Done"
-(and "Cancel") button in the user toolbar that produces the new
-version of the svg-texmacs equation and closes TeXmacs.
-
-This extension is meant to be as much as possible 2-ways compatible with
-Textext.ink equations. Note however that in order to correctly edit texmacs
-equations, textext has to be invoked with a preamble file containing the
-texmacs latex macros and appropriate includes (see texmacs_latex.sty coming
-with this file).
-
-A good deal of the inspiration, implementation and technical details of this
-script directly comes from textext.py (http://www.iki.fi/pav/software/textext/)
-, an Inkscape extension written by Pauli Virtanen  (pav@iki.fi) that does
-the same thing with Latex equations, albeit in an essentially non-WYSIWYG way.
-Part of the code is directly copied from textext.py. Thank you Pauli!
-
-"""
-#------------------------------------------------------------------------------
-
-import sys, os, glob, platform
-import inkex, tempfile, subprocess, copy
-from lxml import etree
-
-IS_WINDOWS = (platform.system() == "Windows")
-#IS_MACOS= sys.platform.startswith('darwin')
-
-if IS_WINDOWS :
-    programfiles = os.environ.get('PROGRAMFILES')
-    texmacs_path = os.path.join(programfiles, 'TeXmacs','bin', 'texmacs.exe')
-    
-else : texmacs_path ='texmacs' #texmacs needs to be in the path!
-
-TEXTEXT_NS = u"http://www.iki.fi/pav/software/textext/"
-TEXMACS_NS = u"https://www.texmacs.org/"
-SVG_NS = u"http://www.w3.org/2000/svg"
-
-NSS = {
-    u'textext': TEXTEXT_NS,
-    u'texmacs': TEXMACS_NS,
-    u'svg': SVG_NS
-}
-
-tm_file="<TeXmacs|1.0.7.15>\n\n<style|generic>\n\n<\\body>\n %s \n\n</body>\n\n<\\initial>\n %s \n\n</initial>"
-tm_dummy_equation="<\equation*>\n    1+1\n  </equation*>\n"
-tm_no_equation="\\;\n"
-tm_scheme_cmd_line_args =  "(begin (show-icon-bar 3 #t) (menu-bind texmacs-extra-icons "\
-		"((balloon \"Done\" \"update equation in Inkscape\") (((select-all)(export-selection-as-graphics "\
-		"(url-glue (current-buffer) \".svg\"))(quit-TeXmacs))))((balloon \"Cancel\" "\
-		"\"abandon modifying equation\")(quit-TeXmacs)))%s) "
-tm_extra_latex_cmd_line_args=  "(delayed (:idle 000)(insert (latex->texmacs (parse-latex \"\\\\[ %s \\\\]\"))))"
-tm_no_style=""
-
-#------------------------------------------------------------------------------
-# Inkscape plugin functionality
-#------------------------------------------------------------------------------
-
-class Texmacs(inkex.Effect):
-    def __init__(self):
-        inkex.Effect.__init__(self)
-        self.tmp_path = tempfile.mkdtemp()
-        self.tmp_base = 'inkscape_edit_tmp.tm'
-        self.tmp_name = os.path.join(self.tmp_path,self.tmp_base)
-
-     
-    def effect(self):
-        """Perform the effect: create/modify embedded equation"""
-        
-        # Find equation and how to modify it
-        old_node, latex_option_cmd, tm_equation, tm_style = self.get_old()
-        
-        # build full scheme command line command        
-        scheme_cmd = tm_scheme_cmd_line_args % latex_option_cmd
-
-        # call texmacs for editing
-        self.call_texmacs(scheme_cmd, tm_equation, tm_style)
-
-        svg_name = self.tmp_name + ".svg" #if successful texmacs creates that svg file
-        if os.path.isfile(svg_name):
-           f = open(svg_name, 'r')
-           tree = etree.parse(f)
-           f.close()
-
-           root = tree.getroot()
-           new_node = root.find('{%s}g' % SVG_NS)
-
-           # -- Replace
-           self.replace_node(old_node, new_node)
-
-        #finish : cleanup
-        self.remove_temp_files()
-
-    
-    def get_old(self):
-        """
-        Dig out equation to be modified (texmacs or textext)
-        Returns: (old_svg_node, latex_option_command (for the textext case), tm_equation_to_be_edited)
-        """
-        for i in self.options.ids: 
-        # gets list of ids in the call of the extension.
-            node = self.selected[i] 
-            # selects each member of selection in turn ; 
-            #only the first one which can be processed will be
-            if node.tag != '{%s}g' % SVG_NS: continue
-            
-            elif '{%s}texmacscode'%TEXMACS_NS in node.attrib: # that group contains texmacs data
-            	tm_equation = node.attrib.get('{%s}texmacscode' % TEXMACS_NS, '').decode('string-escape')
-            	if '{%s}texmacstyle'%TEXMACS_NS in node.attrib: #further contains styling info
-            	    tm_style = node.attrib.get('{%s}texmacstyle' % TEXMACS_NS, '').decode('string-escape')
-            	else:
-                    tm_style =''
-            	return (node, '', tm_equation, tm_style)
-
-            elif '{%s}text'%TEXTEXT_NS in node.attrib:  #implements Textext conversion to TeXmacs
-            	latex_code = node.attrib.get('{%s}text' % TEXTEXT_NS, '')
-                return (node, tm_extra_latex_cmd_line_args % latex_code, tm_no_equation, tm_no_style)
-
-		# if we arrive here no editable equation was in
-        # selection (including no selection): launch TeXmacs with dummy equation.
-        return (None, '', tm_dummy_equation, tm_no_style)
-
-    def call_texmacs(self, scheme_cmd, equ, styl):
-			f_tmp = open(self.tmp_name, 'w') # create a temporaty tm file that texmacs will edit
-			try:
-				f_tmp.write(tm_file %( equ, styl)) #insert equation to be edited in file (blank in textext case)
-			finally:
-				f_tmp.close()
-			cmd = [texmacs_path,"-x",scheme_cmd , self.tmp_name]
-			try:
-				p = subprocess.Popen(cmd, 
-			                     stdout=subprocess.PIPE,
-			                     stderr=subprocess.PIPE)
-				out, err = p.communicate()
-			except OSError, e:
-			    raise RuntimeError("Command %s failed: %s" % (' '.join(cmd), e))
-        
-			if p.returncode != 0 :
-			    raise RuntimeError("Command %s failed (code %d): %s"
-                               % (' '.join(cmd), p.returncode, out + err))
-
-    def replace_node(self, old_node, new_node):
-        """
-        Replace an XML node old_node with new_node
-        in self.document.
-        """
-        if old_node is None:
-            self.current_layer.append(new_node)
-        else:
-		# -- Copy transform
-        	try:
-            	# Note: the new node does *not* have the SVG namespace prefixes!
-            	#       This caused some problems as Inkscape couldn't properly
-            	#       handle both svg: and prefixless entries in the same file
-            	#       in some cases.
-        	    new_node.attrib['transform'] = old_node.attrib['transform']
-        	except (KeyError, IndexError, TypeError, AttributeError):
-        	    pass
-        	try:
-        	    new_node.attrib['transform'] = old_node.attrib['{%s}transform'%SVG_NS]
-        	except (KeyError, IndexError, TypeError, AttributeError):
-        	    pass
-
-		# -- Copy style (remembering style is tricky...)
-		try:
-			new_node.attrib['style'] = old_node.attrib['style']
-        	except (KeyError, IndexError, TypeError, AttributeError):
-        		pass
-		try:
-			new_node.attrib['style'] = old_node.attrib['{%s}style'%SVG_NS]
-        	except (KeyError, IndexError, TypeError, AttributeError):
-        		pass
-
-		# replace node
-		parent = old_node.getparent()
-        	parent.append(new_node)
-		parent.remove(old_node)
-            
-        # -- Work around probable bugs in several viewers that don't handle
-        #    "stroke-width: 0;" style properly.
-        style = 'stroke-width: 0.0000001'
-        try:
-            xstyle = new_node.attrib['style']
-        except KeyError:
-            try:
-                xstyle = new_node.attrib['{%s}style'%SVG_NS]
-                del new_node.attrib['{%s}style'%SVG_NS]
-            except KeyError:
-                xstyle = ""
-        if 'stroke-width' not in xstyle:
-            if xstyle.strip():
-                style = xstyle + ';' + style
-        else:
-            style = xstyle
-        new_node.attrib['style'] = style
-
-	return
-
-
-    def remove_temp_files(self):
-        """Remove temporary files"""
-        base = os.path.join(self.tmp_path, self.tmp_base)
-        for filename in glob.glob(base + '*'):
-            self.try_remove(filename)
-        self.try_remove(self.tmp_path)
-
-    def try_remove(self, filename):
-        """Try to remove given file, skipping if not exists."""
-        if os.path.isfile(filename):
-            os.remove(filename)
-        elif os.path.isdir(filename):
-            os.rmdir(filename)
-
-
-#------------------------------------------------------------------------------
-# Entry point
-#------------------------------------------------------------------------------
-
-if __name__ == "__main__":
-    e = Texmacs()
-    e.affect()
diff --git a/TeXmacs/progs/convert/images/tmimage.scm b/TeXmacs/progs/convert/images/tmimage.scm
index 3696c689..330eab55 100644
--- a/TeXmacs/progs/convert/images/tmimage.scm
+++ b/TeXmacs/progs/convert/images/tmimage.scm
@@ -3,13 +3,19 @@
 ;; MODULE      : tmimage.scm
 ;; DESCRIPTION : convert texmacs fragment (selection) to image formats.
 ;;               Try embedding source code in image
-;; COPYRIGHT   : (C) 2012  Philippe Joyez
+;; COPYRIGHT   : (C) 2012-2022  Philippe Joyez
 ;;
 ;; This software falls under the GNU general public license version 3 or later.
 ;; It comes WITHOUT ANY WARRANTY WHATSOEVER. For details, see the file LICENSE
 ;; in the root directory or <http://www.gnu.org/licenses/gpl-3.0.html>.
 ;;
 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
+;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
+;; convert active selection to various graphics format
+;; If target is svg embed texmacs code of the selection in the image for
+;; re-edition (Could be done for other formats too).
+;; the svg produced by this method can be pasted in inkscape via the clipboard
+;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 
 (texmacs-module (convert images tmimage)
   (:use (convert tmml tmmlout)
@@ -18,30 +24,57 @@
 ;; (display "Texmacs] Loading module tmimage\n")
 
 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
-;; convert active selection to various graphics format
-;; try embedding texmacs code of the selection in metadata of the image for
-;; re-edition.
-;; the svg produced by this method can be pasted in inkscape via the clipboard
+;; Handling of image convertion preferences
 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 
 (define (default-image-export-format)
   (if (nnot (converter-search "pdf-file" "svg-file")) "svg" "pdf"))
 
 (define-preferences
-  ("texmacs->image:format" (default-image-export-format) noop))
+  ("texmacs->image:format" (default-image-export-format) noop)
+  ("texmacs->image:scale" "2.0" noop)
+  ("texmacs->image:raster-resolution" "300" noop))
 
 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 ;; private functions
 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 
-;; temporary files with extensions
+(define (baseline-relpos t)
+;; compute relative position of baseline
+  (number->string (exact->inexact
+    (/ 
+      (- 
+        (string->number(cadr (box-info (stree->tree `(with "text-at-valign" "bottom" ,t)) "B")))
+        (string->number(cadr (box-info (stree->tree `(with "text-at-valign" "base" ,t)) "B"))))
+ ;       (string->number(cadr (box-info (stree->tree `(with "doc-at-valign" "bottom" ,t)) "B")))
+  ;      (string->number(cadr (box-info (stree->tree `(with "doc-at-valign" "base" ,t)) "B"))))
+      (string->number(cadr (box-info t "H")))))))
 
 (define (url-temp-ext ext)
+;; temporary files with extensions
   (url-glue (url-temp) (string-append "." ext)))
-
-;; new system function call that check that output is produced
-;; and give minimum information if not
-
+  
+(define (myhash s)
+  (if (defined? 'string-hash) 
+    (format #f "~x"  (string-hash s 16777215))
+  ; string-hash not in s7
+  ;computes adler32 with string's bytes 
+  ;adapted for 24 bits to give 6 hex digits
+  (format #f "~x" (myhash-aux 1 0 (vector->list (string->byte-vector  s))) ) 
+  ))
+        
+(define (myhash-aux s1 s2 bl)
+  (let* ((x (car bl))
+         (s3 (modulo (+ s1 x) 4093 )) ;; last 12-bits prime - originally 65521 last 16-bits prime
+         (s4 (modulo (+ s2 s3) 4093 )))
+        (if (= 1 (length bl))
+          (+ (ash s4 12) s3)
+          (myhash-aux s3 s4 (cdr bl) ))
+  )) 
+
+(if (not (defined? 'string-contains)) ; for s7
+    (define (string-contains ss s)
+       (string-position s ss)))
 
 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 ;; commodity functions for tree manipulations
@@ -65,13 +98,16 @@
 
 (define (remove-node-raise-children! node . firstlast)
   ;; similar to "remove tag" operation in the editor
+  ;; if no extra args are given all children are raised
+  ;; if only one extra arg is given all children starting from this one are raised
+  ;; if last is specified, children up to last (included) are raised
   (let* ((parent (tree-ref node :up))
-         (pos (+ (tree-index node) 1))
-         (lastindex (if (< (length firstlast) 2) (- (tree-arity node) 1) (cadr firstlast) ))
-         (firstindex (- (if (null? firstlast) 0 (car firstlast)) 1)))
-    (do ((i lastindex (- i 1))) ((= i firstindex))
-      (copy-node! (tree-ref node i) parent pos))
-    (remove-node! node)
+         (pos (tree-index node))
+         (lastindex+1 (if (< (length firstlast) 2) (tree-arity node) (+ (cadr firstlast) 1) ))
+         (firstindex (if (null? firstlast) 0 (car firstlast)))
+         (cl (select node `((:range ,firstindex ,lastindex+1)))))
+    (tree-insert! parent (+ pos 1) cl)
+    (tree-remove! parent pos 1)
     ))
 
 (define (replace-leaftext! leaf newtext)
@@ -79,46 +115,117 @@
   ;; Makes the node a leaf if it wasn't one
   (tree-assign! leaf (string->tree newtext)))
 
+(define (selection-trim-ending)
+ 	  	   (if (selection-active-any?)
+	  	     (with st (selection-tree)
+ 	  	       (if (and (not  (tree-atomic? st ))
+	  	                (tree-empty? (tree-ref st :last)))
+	  	         (begin
+	  	           (selection-set
+ 	  	             (selection-get-start)
+ 	  	             (path-previous (root-tree) (selection-get-end)))
+	  	           (selection-trim-ending))))))
+  
 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
-;; 2 functions for remapping cross-referenced items (glyphs)
-;; in the svg using unique ids. This is needed to avoid collisions between
-;; definitions belonging to differents formulas in inkscape
+;; Main functions needed for making reeditable svg
 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 
-(define (newids! lablist tm-fragment-string)
-  ;; replaces all ids in the svg
-  ;; plus returns an associationlist for mapping old id to new ones
-  ;; we will use it to replace hyperlinks to the former ids to the new ones
-  (let* ((unique (number->string (string-hash tm-fragment-string 1000000)))
-         ;; generate a reproducible 6-digit number that depends
-         ;; on the tm code of the selection
-         (basename (string-append "tm" unique "-"))
-         (newalist '())
-         (n (length lablist)))
-    (do ((i 0 (+ i 1))) ((= i n))
-      (let* ((newlabel (string-append basename (number->string i)))
-             (labelnode (list-ref lablist i))
-             (oldlabel (tree->string labelnode)))
-        (set! newalist (assoc-set! newalist (string-append "#" oldlabel)
-                                   (string-append "#" newlabel) ))
-        (replace-leaftext! labelnode newlabel)))
-    newalist))
-
-(define (replace-hlinks! hreflist alist)
-  ;; use the above association list to actualy replace
-  ;; the xlink:href items with updated targets
-  (map (lambda (leaf)
-         (let ((newtarget (assoc-ref alist (tree->string leaf))))
-           (replace-leaftext! leaf newtarget)))
-       hreflist))
+(define (replace-hlinks! svgroot defs tm-fragment-string)
+;; function for remapping cross-referenced items (glyphs)
+;; in the svg using unique ids. This is needed to avoid collisions between
+;; definitions belonging to differents formulas in inkscape
+  (let* 
+    ((deflist (select defs '(:* @ id :%1)))
+     ;; list of all ids in the drawing, pointed to by 'clip-path'
+     ;; attributes or xlink:href attribute of 'use' nodes 
+     (hreflist (select svgroot '(:* @ (:or xlink:href clip-path style) :%1)))
+     (unique (myhash tm-fragment-string))
+     ;; generate a reproducible 6-digit hex number that depends
+     ;; on the tm code of the selection
+     (basename (string-append "tm" unique "-"))
+     (n (length deflist)))
+    (if (> n 0)
+      (do ((i 0 (+ i 1))) ((= i n))
+        (let* 
+          ((labelnode (list-ref deflist i))
+           (deftype (tree-label (tree-ref labelnode :up :up :up)))
+           (newlabel (string-append basename (number->string i)))
+           (callerfound #f))
+          (map 
+            (lambda (x) 
+              (let* 
+                ((stylestr (tree->string x))
+                 (labelstr (tree->string labelnode))
+                 (labelength (string-length labelstr))
+                 (pos (string-contains stylestr labelstr)))
+                (if (and pos (or (== (string-length stylestr) (+ pos labelength)) (== (substring stylestr (+ pos labelength) (+ 1 pos labelength)) ")")))
+                  (begin 
+                    (replace-leaftext! x (string-replace stylestr labelstr newlabel))
+                    (set! callerfound #t)))))
+            hreflist)
+          (if callerfound
+            (replace-leaftext! labelnode newlabel)
+            (remove-node! (tree-ref labelnode :up :up :up))) ;;that def was previously removed or never used (it happens!)
+        )))))
+
+;; the svg generated by poppler from texmacs pdf output
+;; has many useless <g clip-path=xxx some_element> (and even often nested)
+;; making the svg unecessarily complicated and big.
+;; We remove unecessary clip-pathes and flatten some structures.
+;; The resulting svg for simple text and formulas is clean
+;; WARNING : these functions could cause errors if the pdf->svg converter
+;; is not poppler-based (pdftocairo or pdf2svg)
+
+(define (clean-svg1! svgroot)
+;remove useless outer clip-path in nested g clip-path g, but keep id if exists
+;oct 2017: disable because messes up streched braces
+  (let* 
+    ((gclipg (reverse(select svgroot '(:* g @ clip-path :up :up g :up)))))
+    (map-in-order 
+      (lambda (x) 
+        (let* ((childg (tree-ref x 'g)) 
+               (gattr (tree-ref x '@)) 
+               (gid (tree-ref gattr 'id))) 
+          (if (nnot gid) (move-node! (tree-ref gattr 'id) (tree-ref childg '@) 1))
+          (remove-node! gattr )
+          (remove-node-raise-children! x))
+          )
+       gclipg)))
+
+(define (clean-svg2! maingroup)
+;;in main group flatten g use, keeping g attributes except clip-paths
+  (let* 
+    ((guse (reverse (select maingroup '(g use)))))
+    (map-in-order 
+      (lambda (x) 
+        (let* ((parentg (tree-ref x :up))) 
+          (map remove-node! (select parentg '(@ (:or clip-rule clip-path))))
+          (map (lambda (y) (move-node! y (tree-ref x '@) 1)) (select parentg '(@ :%1)))
+          (remove-node! (tree-ref parentg '@))
+          (remove-node-raise-children! parentg)))
+      guse)))
+
+(define (clean-svg3! defs)
+;;in defs flatten (g symbol path), keeping symbol attributes
+  (let* 
+    ((gsymbolpath (reverse (select defs '(g symbol path :up))))
+     (gsymbol #f))
+    (if (nnull? gsymbolpath)
+      (begin
+        (set! gsymbol (tree-ref (car gsymbolpath) :up))
+        (map-in-order 
+          (lambda (x) 
+            (let* ((symbolpath (tree-ref x 'path))) 
+            (map (lambda (y) (move-node! y (tree-ref symbolpath '@) 1)) (select x '(@ :%1)))
+            (remove-node! (tree-ref x '@))
+            (remove-node-raise-children! x)))
+          gsymbolpath)
+        (remove-node-raise-children! gsymbol)))))
 
-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 ;; define latex and texmacs string representation of selection
 ;; we escape them to ascii so that they do not interfere with xml
 ;; <  -> &lt;  > -> &gt; \ -> \\, all characters above #127->\xXX ...
 ;; see  TeXmacs/langs/encodings/cork-escaped-to-ascii.scm
-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
-
 (define (latex-encode tm-fragment-tree)
   ;; for the latex representation we mimick what is done when
   ;; "copy to latex" is performed
@@ -131,87 +238,80 @@
 (define (tm-encode tm-fragment-tree)
   (escape-to-ascii (serialize-texmacs tm-fragment-tree)))
 
-(define (remove-clip! clipg)
-  (let* ((parent (tree-ref clipg :up))
-         (pos (+ (tree-index clipg) 1))
-         (lastindex (- (tree-arity clipg) 1)))
-    (do ((i lastindex (- i 1))) ((= i 0))
-      (let* ((node (tree-ref clipg i)))
-             (move-node! node parent pos)))
-    (remove-node! clipg)
-    ))
-
-(tm-define (cr2? s) (or (equal? (tree->stree s) "\n") (equal? (tree->stree s) "\n  ")))
-
-(define (refactor-svg dest tm-fragment)
-  ;; reorganize svg file and inject attributes containing tm code of
-  ;; equation. dest is the url of the svg file to be edited
-  ;; A latex fragment is also added for compatibility with
-  ;; 'textext' inkscape extension
-  ;; FIXME : no error checking, no return value...
-  ;; for improvements (we could pass the style that was used when
-  ;; the equation was created, the fonts,...)
-
+(define (refactor-svg dest tm-fragment relbaseline)
+;; dest is the url of the svg file to be edited
+;; We reorganize & cleanup the svg file and inject attributes containing:
+;; - the tm code of equation
+;; - style info from the original document (style, fonts, layout, ...)
+;; - A latex fragment for compatibility with 'textext' inkscape extension
+;; - the relative position of the baseline to enable vertical alignement
+;;   in an external application
+;; FIXME : no error checking, no return value...
 
   (let*
-      (;; first: load svg and transform to an active tree in
-       ;; temporary buffer so that we can manipulate it
-       ;; using texmacs primitives for trees
-       (svg-in (string-load dest)) ;; load svg file as string
-       (s-svg-in (parse-xml svg-in)) ;; parse to stree
-       (mybuf (buffer-new))
-       ;; create temporary buffer for subsequent manipulations of svg tree
-       (void (buffer-set-body mybuf (tree-assign-node! (stree->tree s-svg-in)
-                                                       'concat)))
-       ;; populate buffer with tree
-       ;; replace *TOP* node by concat otherwise displaying
-       ;; that buffer crashes texmacs
-
-       ;; second: define a bunch of locations in the tree
-       (buftree (buffer-get-body mybuf)) ;; the whole tree
-       (svgroot (car (select buftree '(:* svg)))) ;; the <svg > node
-       (maingroup (car (select svgroot '(g))))
-       ;; the main group in the svg, containing the drawing layout
-       (maingroup-attrib (car (select maingroup '(@))))
-       ;; attributes of the main group
-       (defs (car (select svgroot '(defs))))
-       ;; the defs, containing the glyph vector outlines,
-       ;; hyperlinked from the drawing (a.k.a cloned)
-       (idlist (select svgroot '(:* id :%1)))
-       ;; list of all ids in the drawing, used to label glyph outlines
-       (hreflist (select maingroup '(:* @ xlink:href :%1)))
-       ;; list of hyperlinks to the glyphs labels
-
-       ;; third: the new data we want to insert in the tree
-       (latex-code (latex-encode tm-fragment))
-       (tm-code (tm-encode tm-fragment))
-       (tm-style (tm-encode (get-all-inits)))
-       ;; define new attributes containing latex and texmacs code:
-       (extra-latex-attrib
-        `((xmlns:ns0 "http://www.iki.fi/pav/software/textext/")
-          (ns0:text ,latex-code) (ns0:preamble "texmacs_latex.sty")))
-       (extra-tm-attrib `((xmlns:ns1 "https://www.texmacs.org/")
-                          (ns1:texmacscode ,tm-code) (ns1:texmacstyle ,tm-style)))
-       ;; OK, the texmacs namespace maybe not correctly described at that url
-       (old->new-labels (newids! idlist tm-code))
-       ;; rename all ids, create an association list of old to new ids
-       )
-
-    ;; fourth: modify tree
-    (replace-hlinks! hreflist old->new-labels)
-    ;; replace hlinks with new pointers
-    (map remove-node! (select svgroot '(:* (:match :cr2?))))
-    (map remove-clip! (reverse (select maingroup '(:* g @ clip-path :up :up))))
-    (map remove-node! (select defs '(:* clipPath) ))
-    ;; cleanup & simplify svg tree removing unecessary clips
-    (tree-insert! maingroup-attrib 1 extra-latex-attrib)
-    ;; for textext compatibility
+    ( ;; 1: load svg and transform to an active tree in
+      ;; temporary buffer so that we can manipulate it
+      ;; using texmacs primitives for trees
+      (svg-in (string-load dest)) ;; load svg file as string
+      (s-svg-in (parse-xml svg-in)) ;; parse to stree
+      (mybuf (buffer-new))
+      ;; create temporary buffer for subsequent manipulations of svg tree
+      (void (buffer-set-body mybuf (tree-assign-node! (stree->tree s-svg-in)
+                                                     'concat)))
+      ;; populate buffer with tree
+      ;; replace *TOP* node by concat otherwise displaying
+      ;; that buffer crashes texmacs
+      
+      ;; 2: define a bunch of locations in the tree
+      (buftree (buffer-get-body mybuf)) ;; the whole tree
+      (svgroot (car (select buftree '(:* svg)))) ;; the <svg > node
+      (maingroup (car (select svgroot '(g))))
+      ;; the main group in the svg, containing the drawing layout
+      (maingroup-attrib (car (select maingroup '(@))))
+      ;; attributes of the main group
+      (defs (car (select svgroot '(defs))))
+      ;; the defs, containing the glyph vector outlines,
+      ;; hyperlinked from the drawing (a.k.a cloned)
+      (bgframe (select maingroup '(:* path @ style :%1)))
+      (bgframe (if (null? bgframe) #f (car bgframe)))
+      ;; the solid background we introduced  
+      ;; 3: the new data we want to insert in the tree
+      (latex-code (latex-encode tm-fragment))
+      (tm-code (tm-encode tm-fragment))
+      (tm-style (tm-encode (get-all-inits)))
+      ;; define new attributes containing latex and texmacs code:
+      (extra-latex-attrib
+      `((xmlns:ns0 "http://www.iki.fi/pav/software/textext/")
+        (ns0:text ,latex-code) (ns0:preamble "texmacs_latex.sty")))
+      (extra-tm-attrib 
+      `((xmlns:ns1 "https://www.texmacs.org/")
+        (ns1:texmacscode ,tm-code) (ns1:texmacsstyle ,tm-style)
+        (ns1:texmacsbaseline ,relbaseline)))
+      ;; OK, the texmacs namespace maybe not correctly described at that url ...
+    )
+
+    ;; 4: modify tree
+    ;; 4.0 set the background fully transparent
+    (if (and bgframe (== (tree->string bgframe) " stroke:none;fill-rule:nonzero;fill:rgb(100%,100%,100%);fill-opacity:0.007;")) 
+        (tree-set! bgframe " stroke:none;fill-rule:nonzero;fill:rgb(100%,100%,100%);fill-opacity:0.00"))
+    ;; 4.1, (optional) simplify svg tree, removing unecessary clips and structures
+    ;; we don't even try simplifiying if the selection contains an image
+    ;; as it may have an arbitrarily complex svg structure
+    (if (not (or (== (tree-label tm-fragment) 'image) (nnull? (select tm-fragment '(:* image))))) 
+      (begin
+        ;;(clean-svg1! svgroot) ;oct 2017: disable because messes up streched braces
+        (clean-svg2! maingroup)
+        (clean-svg3! defs)))
+    ;; 4.2, replace hlinks with new pointers, removing unused defs
+    (replace-hlinks! svgroot defs (string-append tm-code tm-style (get-preference "texmacs->image:scale")))
+    ;; 4.3 (not optional!), add our own new attributes for re-editting equation  
+    (tree-insert! maingroup-attrib 1 extra-latex-attrib) ;; for textext compatibility
     (tree-insert! maingroup-attrib 2 extra-tm-attrib)
+    ;; 4.4 move defs containing the glyph outlines inside main group
+    ;; so that they remain together in inkscape (doesn't work when we go through clipboard, though)
     (move-node! defs maingroup 2)
-    ;; move defs containing the glyph outlines inside main group
-    ;; so that they remain together in inkscape
 
-    ;; Fifth : finally create output
+    ;; 5: finally create output
     (let* (;; convert back to stree, recreate the *TOP* node,
            ;; and restore *PI* xml
            ;; (instead of *PI* "xml" given by tree->stree -
@@ -240,81 +340,147 @@
     (set-message "Qt GUI only, sorry. Use \"Export selection...\"" "")
     (if (not (selection-active-any?))
       (set-message "no selection!" "")
-      (let* ((format (get-preference "texmacs->image:format"))
+      (begin (selection-trim-ending)
+        (let* ((format (get-preference "texmacs->image:format"))
              (tmpurl (url-temp-ext format)))
-        (export-selection-as-graphics tmpurl)
+          (export-selection-as-graphics tmpurl)
 	;; first generate an image file
-        (graphics-file-to-clipboard tmpurl)
+          (graphics-file-to-clipboard tmpurl)
 	;; place that image on the clipboard
-        (system-remove tmpurl)
-	))))
+          (system-remove tmpurl)
+	)))))
 
 (tm-define (export-selection-as-graphics myurl)
   (:synopsis "Generates graphics format of the current selection")
   (:argument myurl "A full file url with extension")
   (:returns "nothing")
-  ;; global document parameters such as style, fonts, etc. are respected
-  ;; in the typesetting. However they are presently not passed to
-  ;; the svg and therefore lost when re-editing the svg
+  ;; for svg export, the texmacs code of the selection as well as 
+  ;; global document parameters such as style, fonts, etc. are
+  ;; embedded in the drawing to enable re-editing from inkscape
 
-  (when (or (== (url-suffix myurl) "")
-            (not (converter-search "pdf-file" (file-format myurl))))
+  (if (== (url-suffix myurl) "")
     (with format (get-preference "texmacs->image:format")
-      (when (not (converter-search "pdf-file" (string-append format "-file")))
-        (set! format "pdf"))
+      (show-message (string-append "No file extension specified, defaulting to " format) "No image format given" )
       (with suffix (format-default-suffix format)
         (set! myurl (url-glue myurl (string-append "." suffix))))))
-
-  (if (not (selection-active-any?))
-      (set-message "no selection!" "")
-      (let* (
-        ;; step 1 prepare and typeset selection
-        ;; if selection is part of math need to re-encapsulate
-        ;; it with math to obtain proper typesetting :
-        (tm-fragment
-          (if (in-math?)
-              (stree->tree `(equation* (document ,(selection-tree))))
-  	          (selection-tree)))
-        ;; also if selection spans several lines of text,
-        ;; need to encapsulate it in a fixed-width table
-        ;;to enforce pagewidth :
-        (tm-fragment-enforce-pagewidth
-          (if (tree-multi-paragraph? (selection-tree))
-              (stree->tree
-                `(tabular
-                   (tformat (twith "table-width" "1par")
-			               (twith "table-hmode" "exact")
-			               (cwith "1" "1" "1" "1" "cell-hyphen" "t")
-                     (table (row (cell (document ,tm-fragment)))))))
-              (selection-tree)))
-        (temp0 (url-temp-ext "pdf"))
-        (dpi-pref (get-preference "printer dpi"))
-        (suffix (url-suffix myurl)))
-
-       (set-printer-dpi "236") ; 472 is ~ exact size
-       ;;set to a fixed value so our graphics does
-       ;;not depend on the printer dpi
-       ;;We need to set this weird dpi value so that the size of the svg
-       ;;produced is about twice that of direct pdf or ps output. Why??
-       (print-snippet temp0 tm-fragment-enforce-pagewidth #t)
-       ;;typeset fragment to ps as starting point
-       (set-printer-dpi dpi-pref)
-       ;; revert to preference dpi
-       ;; step 2 generate output according to desired output format
-
-       (cond
-        ((== suffix "pdf") (system-copy temp0 myurl))
-        ((== suffix "svg")
-         ;; assume target is inkscape
-         (file-convert temp0 myurl)
-         ;; using either pdf2svg or pdf2cairo converters is crucial
-         ;; for svg inport in inkscape:
-         ;; fonts are properly passed as vector outlines
-         ;; file converters are defined in init-images.scm
-         (refactor-svg myurl tm-fragment))
-         ;; modify svg, embedding texmacs code
-        (else
-         (file-convert temp0 myurl)))
-
-       (system-remove temp0) ;; temp pdf file not needed anymore
-  )))
+  
+  (with suffix (url-suffix myurl)
+    (when (not (file-converter-exists? "x.pdf" (string-append "y." suffix)))
+      (show-message (string-append "Sorry, pdf to " suffix " converter is missing. Generating pdf instead") "Image format not available" )
+      (let* ((sufl (string-length suffix))
+            (surl (url->string myurl))
+            (sl (string-length surl))) 
+        (set! myurl (string->url (string-append (substring surl (- sl sufl) sl) "pdf"))))))
+
+; TODO Handle when output file already exists (presently we overwritte without warning)
+
+  (cond
+   ((not (selection-active-any?)) (set-message "no selection!" ""))
+   (else 
+    (let*
+     (
+;; step 1 prepare and typeset selection
+;; if selection is inside inline or display math preserve inline/display style
+
+      (tm-fragment
+        (cond
+          ((match? (tree->stree (selection-tree)) 
+                    '(:or (equation* :*) (equation :*) (eqnarray :*) (eqnarray* :*) (math :*)))
+            (display "is some math \n") (selection-tree)) 
+          ((==  (tree->string (get-env-tree-at "mode" (selection-get-start))) "math")
+             (if (==  (tree->string (get-env-tree-at "math-display" (selection-get-start))) "true")
+               (begin 
+                 (display "in display math \n") 
+                 (stree->tree `(equation* (document ,(selection-tree)))))
+               (begin 
+                 (display "in math \n")
+	             (stree->tree `(math (document ,(selection-tree)))))))
+          (else (display "other \n")(selection-tree))))
+;; is selection wider than 1par (and needs linebreaks and or hyphenation)?
+      (maxwidth (length-decode "1par"))
+      (partmpt (string-append (number->string maxwidth) "tmpt"))
+      (parcm (length-add  "0cm" partmpt))
+      (pagewcm (length-add  "0cm" (string-append (number->string (+ 1 (*  (get-page-width #t) 10))) "tmpt")))
+      ;; get-page-width return dimension in the cpp "SI" unit which seems to be == "10tmpt"
+;; output scale of image?
+      (str-scale  (get-preference "texmacs->image:scale"))
+      (scale (string->number str-scale))
+
+;; We compute the baseline position only if it's a single-line content
+;; This excludes selections begining with 'document
+;; If the selection is a 'concat we need to check if it does not exceed the page width
+;; If the selection is eqnarray(*) compute it only if it has a single line
+;;  (table-nr-rows) works for this!
+      (iseqnarray (match? (tree->stree tm-fragment) '(:or (eqnarray :*) (eqnarray* :*) (:* align* :*))))
+      (simpleeqnarray (and iseqnarray (== 1 (table-nr-rows)))) 
+      (needbaseline 
+        (if (match? (tree->stree tm-fragment) '(document :*)) 
+          #f   
+         (or
+          simpleeqnarray
+          (< (string->number (cadr (box-info tm-fragment "W"))) (length-decode "1par")))))
+;; the baseline calculation is relative to the size of the background
+;; if not fully transparent the background is included in the svg image (otherwise no)
+;; (during svg postprocessing  we'll set the opacity of the background to 0)  
+      (fillcolor (if needbaseline "#ffffff02" "#ffffff00")) ; either slightly opaque or fully transparent white
+
+
+;; if needbaseline use text-at 
+;; otherwise (multiline selection) use doc-at to get proper pagewidth
+      (tm-fragment-formated 
+         (if iseqnarray 
+           `(document (tformat (twith table-hmode min) ,tm-fragment)) ;reduce table width to min, to avoid wide empty frame
+           tm-fragment))
+      (tm-fragment-formated
+        (if needbaseline
+          (stree->tree `(with "magnify" ,str-scale "page-width" 
+            ,(length-mult scale pagewcm)
+            (text-at 
+             (tabular (tformat 
+                (twith "table-width" ,(length-mult scale parcm))
+                (twith "table-hmode" "min")
+                (twith "table-valign" "B") ;;(=top baseline)
+                (cwith "1" "-1" "1" "-1" "cell-background" ,fillcolor)
+                (cwith "1" "1" "1" "1" "cell-hyphen" "t")
+                (cwith "1" "-1" "1" "-1" "cell-lsep" "0spc")
+                (cwith "1" "-1" "1" "-1" "cell-tsep" "0sep")
+                (cwith "1" "-1" "1" "-1" "cell-rsep" "0spc")
+                (cwith "1" "-1" "1" "-1" "cell-bsep" "0sep")
+                (table (row (cell (document ,tm-fragment))))))
+              (point "0par" "0"))))
+        (stree->tree `(with "magnify" ,str-scale "page-width" 
+          ,(length-mult scale pagewcm) 
+          "doc-at-width" ,(length-mult scale parcm) "doc-at-hmode" "min" "doc-at-padding" "0spc";"doc-at-ppsep" "" 
+             (document-at (document ,tm-fragment-formated ) (point "0par" "0"))))))
+
+;; compute relative position of baseline  
+      (relbaseline (if needbaseline (baseline-relpos tm-fragment-formated) "0.0"))
+      (tm-fragment-formated
+        (if needbaseline 
+           `(with "text-at-valign" "base" ,tm-fragment-formated)
+           tm-fragment-formated))
+
+    (temp1 (url-temp-ext "pdf"))
+    (suffix (url-suffix myurl)))
+
+    (print-snippet temp1 (stree->tree tm-fragment-formated) #t)
+
+	;; step 2 generate output according to desired output format
+
+	  (cond 
+	    ((== suffix "pdf") (system-copy temp1 myurl))
+	    ((== suffix "svg")
+	       ;; assume target is inkscape
+		   (file-convert temp1 myurl)
+		 ;; using either pdf2svg or pdf2cairo converters is crucial
+		 ;; for svg inport in inkscape:
+		 ;; fonts are properly passed as vector outlines
+		 ;; file converters are defined in init-images.scm
+         (display* "relbaseline= " relbaseline "\n")
+         (refactor-svg myurl tm-fragment relbaseline))
+		 ;; modify svg, embedding texmacs code
+	    (else
+            (file-convert temp1 myurl)))
+
+	  (system-remove temp1) ;; temp pdf file not needed anymore
+	))))
diff --git a/TeXmacs/progs/texmacs/menus/preferences-widgets.scm b/TeXmacs/progs/texmacs/menus/preferences-widgets.scm
index 1fcc263d..bf317d51 100644
--- a/TeXmacs/progs/texmacs/menus/preferences-widgets.scm
+++ b/TeXmacs/progs/texmacs/menus/preferences-widgets.scm
@@ -591,29 +591,15 @@
   (let* ((desired-image-format-list '(("svg" "Svg")  ("eps" "Eps")
            ("png" "Png")("tif" "Tiff") ("jpg" "Jpeg") ("pdf" "Pdf")))
          (valid-image-format-list 
-           (filter (lambda (x) (file-converter-exists? "x.pdf" (string-append "x." (car x))))
+           (filter (lambda (x) (file-converter-exists? "x.pdf" (string-append "y." (car x)) ))
              desired-image-format-list)))
-   (eval `(define-preference-names "texmacs->image:format" ,@valid-image-format-list))
+   (eval `(define-preference-names "texmacs->image:format" ,@ valid-image-format-list))
    (cadr (apply map list valid-image-format-list))))
 
 (define (supports-inkscape?) (url-exists-in-path? "inkscape"))
 
 (tm-widget (image-preferences-widget)
   ======
-  (bold (text "TeXmacs -> Image"))
-  ===
-  (aligned
-    (item (text "Bitmap resolution (dpi):")
-      (enum (set-preference "texmacs->image:raster-resolution" answer)
-            '("1200" "600" "300" "150" "")
-            (get-preference "texmacs->image:raster-resolution")
-            "8em"))
-    (item (text "Clipboard image format:")
-      (enum (set-pretty-preference "texmacs->image:format" answer)
-            (pretty-format-list)
-            (get-pretty-preference "texmacs->image:format")
-            "8em")))
-  ====== ======
   (bold (text "Image -> TeXmacs"))
   ===
   (aligned
@@ -624,8 +610,30 @@
         (toggle (set-boolean-preference
                  "image->texmacs:svg-prefer-inkscape" answer)
                 (get-boolean-preference
-                 "image->texmacs:svg-prefer-inkscape"))))))
-
+                 "image->texmacs:svg-prefer-inkscape")))))
+  ====== ======
+  (bold (text "TeXmacs -> Image"))
+  ===
+    (aligned
+        (item (text "Clipboard image format:  ")
+          (enum (set-pretty-preference "texmacs->image:format" answer)
+              (pretty-format-list)
+              (get-pretty-preference "texmacs->image:format")
+           "8em"))
+        (item (text "Output scale factor:  ")
+          (enum (set-pretty-preference "texmacs->image:scale" answer)
+            '("1" "1.5" "2" "")
+            (get-pretty-preference "texmacs->image:scale")
+            "8em")) 
+        (item (text "Bitmap resolution (dpi):  ")
+          (enum (set-preference "texmacs->image:raster-resolution" answer)
+              '("1200" "600" "300" "150" "")
+              (get-preference "texmacs->image:raster-resolution")
+              "8em")))
+  ======
+      (centered
+       (hlist  /// (explicit-buttons ("Help" (load-help-buffer (url-resolve (url-glue (string->url "$TEXMACS_DOC_PATH") "/main/convert/man-graphics-export.en.tm") "r"))))))
+)
 ;; All converters ----------
 
 (tm-widget (conversion-preferences-widget)
diff --git a/plugins/equation-editor/doc/man-equation-editor.en.tm b/plugins/equation-editor/doc/man-equation-editor.en.tm
new file mode 100644
index 00000000..ccfd82bc
--- /dev/null
+++ b/plugins/equation-editor/doc/man-equation-editor.en.tm
@@ -0,0 +1,155 @@
+<TeXmacs|2.1.1>
+
+<style|<tuple|tmdoc|doc|british|old-spacing|old-dots|old-lengths>>
+
+<\body>
+  <tmdoc-title|Using <TeXmacs> as an equation editor>
+
+  \;
+
+  This plugin allows <TeXmacs> to operate as a <em|wysiwyg> equation editor
+  for external client applications that can embed <name|Svg> images such as
+  <name|Inkscape>, <name|Libre Office> or <name|Scribus> (As of 2021, the
+  client-side scripts only exist for <name|Inkscape> and <name|LibreOffice>).\ 
+
+  <section*|How it works>
+
+  When a <TeXmacs> document fragment is converted to <name|Svg> format (by
+  using <menu|File|Export selection as image> or <menu|Edit|Copy
+  to<text-dots>|image>), the drawing automatically incorporates the <TeXmacs>
+  source code of the corresponding fragment, enabling later revision of the
+  image content with <TeXmacs>.
+
+  This plugin allows a <with|font-shape|italic|client-side script> to
+  interact with <TeXmacs> for revising such image. When the plugin receives
+  such request, it will open a <TeXmacs> document with the fragment that
+  needs revision (or a dummy new equation if no equation was selected in the
+  client) with a temporary filename and display a simple toolbar indicating
+  that it is operating as an equation editor.
+
+  <\with|par-mode|center>
+    <image|<tuple||png>|10cm|||>
+  </with>
+
+  The user can then modify the equation at will and, when pressing the
+  <key|Done> button, the temporary document is closed and an updated image is
+  sent to the requesting application for replacing the initial image.
+
+  <paragraph|Client-Plugin communication modes>
+
+  The client-side script first tries to connect with a running <TeXmacs>
+  instance on the local machine through socket communications. If that fails,
+  it will launch a new <TeXmacs> instance and communicate via pipes. Socket
+  communication are <em|much> faster since they spare the boot-up time of
+  <TeXmacs>. You can control wether or not <TeXmacs> accepts socket
+  communications from client apps to this plugin using the preference setting
+  \ <menu|Edit|Preferences|Converters|Plugins|Equation-editor|Enable socket
+  communications>.
+
+  Note that for the existing clients, <strong|the equation revision process
+  is scrictly modal> : no action can be performed in the client until the
+  user terminates the revision in <TeXmacs>, either by pressing the
+  \ <key|Done><kbd|> \ or <key|Cancel> button.
+
+  The client-side functionality could probably be acheived with any
+  scriptable application that accepts <name|Svg> images, (<name|Scribus>,
+  <name|MS Office>,<text-dots>)\ 
+
+  <paragraph*|Requirements>
+
+  For this plugin to work, <hlink|an appropriate converter to <name|Svg> must
+  be installed|man-graphics-export.en.tm#external converters>, and on the
+  client side, appropriate extensions need to be installed. The client-side
+  installation can be performed manually, or through the plugin preference
+  widget <menu|Edit|Preferences|Plugins|Equation-editor>.
+
+  When the plugin is called, it checks that
+  <menu|Edit|Preferences|Converters|TeXmacs -\<gtr\> image|Format> is set to
+  <name|Svg>, and changes it if needed.\ 
+
+  <paragraph|Known Issues>
+
+  If the selection contains a macro call with the macro definition outside of
+  the selection, it won't be rendered (<verbatim|<error|compound
+  <em|macroname>>>).
+
+  <section*|Using <TeXmacs> with <name|LibreOffice>>
+
+  <TeXmacs> ships with the <name|LibreOffice> extension that enables
+  interacting with this plugin (and copy-pasting <name|Svg> with
+  <name|Inkscape>), and it can be installed from
+  <menu|Edit|Preferences|Plugins|Equation-editor>. \ <hlink|The detailed
+  documentation for this <name|LibreOffice> extension is available at
+  GitHub|https://github.com/slowphil/SVG_and_TeXmacs_for_LibreOffice/blob/master/README.md>
+  together with the code.\ 
+
+  <section*|Using <TeXmacs> with <name|Inkscape>>
+
+  <paragraph|Through the system clipboard>
+
+  Be sure that the <menu|Edit|Preferences|Converters|TeXmacs -\<gtr\>
+  image|Format> is set to <name|Svg>. Then inserting a <TeXmacs> equation in
+  an <name|Inkscape> drawing is straightforward: select the equation, use the
+  menu item <menu|Edit|Copy to...|Image>, and paste into <name|Inkscape>. In
+  <name|Inkscape>, a <TeXmacs> equation appears as an ordinary <name|Svg>
+  group.
+
+  <paragraph|Modifying an equation within <name|Inkscape>>
+
+  Within <name|Inkscape> select the equation you want to revise and activate
+  <menu|TeXmacs equation> (see below) in <name|Inkscape>'s <menu|extension>
+  menu.
+
+  <paragraph|Installation of the Inkscape extension>
+
+  The <menu|TeXmacs equation> extension for <name|Inkscape> can be installed
+  or updated from the preference panel <menu|Edit|Preferences|Converters|Plugins|Equation-editor|Update/install
+  extension>. The extension should then appear in <name|Inkscape>'s
+  <menu|extension> menu the next time you start <name|Inkscape>.\ 
+
+  Note that this installation is offered only when <hlink|an appropriate
+  converter to <name|Svg> is installed|man-graphics-export.en.tm#external
+  converters>, and a the user's <name|Inkscape> preferences folder is found
+  in the usual location. If you are using non-standard permission settings
+  the automated install may fail; in that case you may use the following
+  instructions as a guideline.
+
+  <\folded-documentation>
+    Show personalized manual install instructions
+  <|folded-documentation>
+    Copy all files contained in <verbatim|<extern|(lambda (x) (url-concretize
+    (url-append (system-\<gtr\>url "$TEXMACS_PATH") (string-\<gtr\>url
+    "misc/inkscape_extension"))))|>> to <verbatim|<extern|(lambda (x)
+    (url-concretize (url-append (if (or (os-win32?) (os-mingw?))
+    (system-\<gtr\>url "$APPDATA") \ (system-\<gtr\>url
+    "~/.config"))(string-\<gtr\>url "inkscape/extensions"))))|>>\ 
+
+    If you see <verbatim|<error|insecure script>> instead of file paths, you
+    need to change the security preference (in
+    <menu|edit|preferences|other|security>) to <verbatim|accept all scripts>
+    (at least temporarily) and then refresh the display by closing/opening
+    this fold or through the menu <menu|Document|Update|All>.
+  </folded-documentation>
+
+  <paragraph|Compatibility with Textext <name|Inkscape> extension>
+
+  Equations produced with <TeXmacs> are essentially compatible with those of
+  the <name|Textext> extension (re-editable <LaTeX> equations extension
+  shipped with <name|Inkscape>): <TeXmacs> can edit <name|Textext> equations,
+  and conversely people using <name|Textext<strong|>> can edit your <TeXmacs>
+  equations provided they use the style file <verbatim|texmacs_latex.sty> (in
+  your user's <name|Iknscape> user directory) containing the texmacs macros
+  and necessary includes.
+
+  <tmdoc-copyright|2021|the <TeXmacs> team>
+
+  <tmdoc-license|Permission is granted to copy, distribute and/or modify this
+  document under the terms of the GNU Free Documentation License, Version 1.1
+  or any later version published by the Free Software Foundation; with no
+  Invariant Sections, with no Front-Cover Texts, and with no Back-Cover
+  Texts. A copy of the license is included in the section entitled "GNU Free
+  Documentation License".>
+</body>
+
+<initial|<\collection>
+</collection>>
\ No newline at end of file
diff --git a/plugins/equation-editor/misc/SVG_and_Texmacs-L-0.3.oxt b/plugins/equation-editor/misc/SVG_and_Texmacs-L-0.3.oxt
new file mode 100644
index 0000000000000000000000000000000000000000..542a47dba9cf5162aee41ccf2057b9f69b547a00
GIT binary patch
literal 49099
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

literal 0
HcmV?d00001

diff --git a/TeXmacs/misc/inkscape_extension/texmacs.inx b/plugins/equation-editor/misc/inkscape_extension/texmacs.inx
similarity index 100%
rename from TeXmacs/misc/inkscape_extension/texmacs.inx
rename to plugins/equation-editor/misc/inkscape_extension/texmacs.inx
diff --git a/TeXmacs/misc/inkscape_extension/texmacs_latex.sty b/plugins/equation-editor/misc/inkscape_extension/texmacs_latex.sty
similarity index 100%
rename from TeXmacs/misc/inkscape_extension/texmacs_latex.sty
rename to plugins/equation-editor/misc/inkscape_extension/texmacs_latex.sty
diff --git a/plugins/equation-editor/misc/inkscape_extension/texmacs_reedit.py b/plugins/equation-editor/misc/inkscape_extension/texmacs_reedit.py
new file mode 100755
index 00000000..9b28a7d9
--- /dev/null
+++ b/plugins/equation-editor/misc/inkscape_extension/texmacs_reedit.py
@@ -0,0 +1,411 @@
+#!/usr/bin/env python
+# -*- coding: utf-8 -*-
+"""
+*******************************************************************************
+* Texmacs extension for Inkscape
+* COPYRIGHT  : (C) 2012-2022 Philippe JOYEZ
+*******************************************************************************
+* This software falls under the GNU general public license version 3 or later.
+* It comes WITHOUT ANY WARRANTY WHATSOEVER. For details, see the file LICENSE
+* in the root directory or <http://www.gnu.org/licenses/gpl-3.0.html>.
+*******************************************************************************
+this files goes into ~/.config/Inkscape/extensions
+(in Windows, it's in $APPDATA/Inkscape/extensions)
+
+This extension allows to (re-)edit mathematical equations in WYSIWYG
+way with GNU-TeXmacs. It works with equations originally produced by
+versions of TeXmacs <http://www.texmacs.org> dated after july 2012,
+but also with those made by the Textext.ink Inkscape extension
+(http://www.iki.fi/pav/software/textext/).
+
+For that, it extracts the TeXmacs (or Latex) description of the equation
+(which appears just as an ordinary group in inkscape),
+creates on the fly a texmacs file and calls texmacs to edit the equation.
+On return, Texmacs generates an svg file containing the updated image
+and description of the equation, which then replaces the old equation.
+
+If no equation exists when the extension is invoked, then a new
+equation is created.
+
+We either connect to TeXmacs through a socket communication, or launch
+it with a command line argument that puts it in equation editor
+configuration. In either case TeXmacs then displays "Done" and "Cancel"
+buttons in the user toolbar.
+
+This extension is meant to be as much as possible 2-ways compatible with
+Textext.ink equations. Note however that in order to correctly edit texmacs
+equations, textext has to be invoked with a preamble file containing the
+texmacs latex macros and appropriate includes (see texmacs_latex.sty coming
+with this file).
+
+For a large part, the inspiration, implementation and technical details of this
+script originally came from textext.py (http://www.iki.fi/pav/software/textext/)
+, an Inkscape extension written by Pauli Virtanen  (pav@iki.fi) that does
+the same thing with Latex equations, albeit in an essentially non-WYSIWYG way.
+Part of the code was directly copied from textext.py. Thank you Pauli!
+
+"""
+#------------------------------------------------------------------------------
+
+import os, glob, platform, time
+import inkex, tempfile, subprocess
+#from xml.etree import ElementTree as etree
+from lxml import etree
+
+import socket
+
+IS_WINDOWS = (platform.system() == "Windows")
+#IS_MACOS= sys.platform.startswith('darwin')
+
+if IS_WINDOWS :
+    def Is64Windows():
+        return 'PROGRAMFILES(X86)' in os.environ
+
+    def GetProgramFiles32():
+        if Is64Windows():
+            return os.environ['PROGRAMFILES(X86)']
+        else:
+            return os.environ['PROGRAMFILES']
+
+    texmacs_path = os.path.join(GetProgramFiles32(), 'TeXmacs','bin', 'texmacs.exe')
+    if not(os.path.isfile(texmacs_path)):
+        inkex.debug("TeXmacs not found in the usual location:\n"+texmacs_path+"\nCannot continue, sorry.")
+        raise SystemExit()
+
+else : texmacs_path ='texmacs' #texmacs needs to be in the path!
+
+def string_unescape(s):
+    """
+etree.parse uses the encoding specified in the xml file (UTF8)
+However when the svg is created, texmacs uses Cork encoding and escapes
+the characters above 128 (for instance é => \xe9 ) and some special characters (&,<,>...)
+so that the texmacs code recorded by texmacs
+and read back by this python code in LO are not immediatly consistent.
+Here, we take care that these characters are properly translated back to texmacs
+(note also the .encode when writing the file content)
+    """
+    return bytes(s, 'utf8').decode('unicode_escape')
+
+TEXTEXT_NS = u"http://www.iki.fi/pav/software/textext/"
+TEXMACS_NS = u"https://www.texmacs.org/"
+TEXMACS_OLD_NS = u"http://www.texmacs.org/"
+SVG_NS = u"http://www.w3.org/2000/svg"
+
+
+tm_file="<TeXmacs|1.99.5>\n\n<style|generic>\n\n<\\body>\n %s \n\n</body>\n\n<\\initial>\n %s \n\n</initial>"
+tm_dummy_equation="<\equation*>\n    1+1\n  </equation*>\n"
+tm_no_equation="\\;\n"
+tm_scheme_cmd_line_args =  '(begin (lazy-plugin-force) (equ-edit-cmdline) %s) '
+if IS_WINDOWS :
+    tm_extra_latex_cmd_line_args=  "(delayed (:idle 000)(insert (latex->texmacs (parse-latex \\\"\\\\[ %s \\\\]\\\"))))"
+else :
+    tm_extra_latex_cmd_line_args=  '(delayed (:idle 000)(insert (latex->texmacs (parse-latex \"\\\\[ %s \\\\]\"))))'
+tm_no_style=""
+
+#------------------------------------------------------------------------------
+# Inkscape plugin functionality
+#------------------------------------------------------------------------------
+
+class Texmacs(inkex.Effect):
+    def __init__(self):
+        inkex.Effect.__init__(self)
+        self.tmp_path = tempfile.mkdtemp()
+        self.tmp_base = 'inkscape_edit_tmp.tm'
+        self.tmp_name = os.path.join(self.tmp_path,self.tmp_base)
+
+
+    def effect(self):
+        """Perform the effect: create/modify embedded equation"""
+        
+        # Find equation and how to modify it
+        old_node, latex_code, tm_equation, tm_style = self.get_old()
+
+        # build full scheme command line command
+        if latex_code != '' :
+            scheme_cmd = tm_scheme_cmd_line_args % (tm_extra_latex_cmd_line_args % latex_code)
+        else :
+            scheme_cmd = tm_scheme_cmd_line_args % ''
+
+        # call texmacs for editing
+        self.call_texmacs(scheme_cmd, tm_equation, tm_style, latex_code)
+
+        svg_name = self.tmp_name + ".svg" #if successful texmacs creates that svg file
+        if os.path.isfile(svg_name):
+           f = open(svg_name, 'r')
+           tree = etree.parse(f)
+           f.close()
+           #inkex.debug("file read  "+svg_name)
+           root = tree.getroot()
+           new_node = root.find('{%s}g' % SVG_NS)
+
+           # -- Replace
+           self.replace_node(old_node, new_node)
+
+        #finish : cleanup
+        self.remove_temp_files()
+
+    
+    def get_old(self):
+        """
+        Dig out equation to be modified (texmacs or textext)
+        Returns: (old_svg_node, latex_option_command (for the textext case), tm_equation_to_be_edited)
+        """
+        for i in self.options.ids:
+        # gets list of ids in the call of the extension.
+            try :
+              #for inkscape ⩾1
+              node = self.svg.selected[i]
+            except :
+              node = self.selected[i]
+            # selects each member of selection in turn ;
+            #only the first one which can be processed will be
+            if node.tag != '{%s}g' % SVG_NS: continue
+
+            elif '{%s}texmacscode'%TEXMACS_NS in node.attrib: # that group contains texmacs data
+                tm_equation = string_unescape(node.attrib.get('{%s}texmacscode' % TEXMACS_NS, ''))
+                if '{%s}texmacsstyle'%TEXMACS_NS in node.attrib: #further contains styling info
+                    tm_style = string_unescape(node.attrib.get('{%s}texmacsstyle' % TEXMACS_NS, ''))
+                else:
+                    tm_style =''
+                return (node, '', tm_equation, tm_style)
+
+            elif '{%s}texmacscode'%TEXMACS_OLD_NS in node.attrib: # that group contains texmacs data
+                tm_equation = string_unescape(node.attrib.get('{%s}texmacscode' % TEXMACS_OLD_NS, ''))
+                if '{%s}texmacsstyle'%TEXMACS_OLD_NS in node.attrib: #further contains styling info
+                    tm_style = string_unescape(node.attrib.get('{%s}texmacsstyle' % TEXMACS_OLD_NS, ''))
+                elif '{%s}texmacstyle'%TEXMACS_OLD_NS in node.attrib: #there was a typo at some point in the code; handle it gracefully
+                    tm_style = string_unescape(node.attrib.get('{%s}texmacstyle' % TEXMACS_OLD_NS, ''))
+                else:
+                    tm_style =''
+                return (node, '', tm_equation, tm_style)
+
+            elif '{%s}text'%TEXTEXT_NS in node.attrib:  #implements Textext conversion to TeXmacs
+                latex_code = node.attrib.get('{%s}text' % TEXTEXT_NS, '')
+                return (node, latex_code, tm_no_equation, tm_no_style)
+
+        # if we arrive here no editable equation was in
+        # selection (including no selection): launch TeXmacs with dummy equation.
+        return (None, '', tm_dummy_equation, tm_no_style)
+
+    def call_texmacs(self, scheme_cmd, equ, styl, latex):
+        """" handle various ways of calling and communicating with texmacs """
+        f_tmp = open(self.tmp_name, 'wb') # create a temporaty tm file that texmacs will edit
+        try:
+            f_tmp.write((tm_file %( equ, styl)).encode("iso-8859-1")) #insert equation to be edited in file (blank in textext case)
+        finally:
+            f_tmp.close()
+
+#try connecting already running texmacs on socket (spares boot-up time)
+        size = 1024
+        clientsocket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
+
+        try:
+            clientsocket.settimeout(0.25)
+            clientsocket.connect(('localhost', 6561))
+            time.sleep(.1)
+            msg='(0 (remote-login "inkscape" "inkscape"))\n'
+            clientsocket.sendall(bytes(str(len(bytes(msg,'utf8')))+ '\n'+msg,'utf8'))
+            clientsocket.setblocking(1)
+            time.sleep(.1)
+            msg = clientsocket.recv(size)
+        except : #any error : can't connect (texmacs not running or server not started), no answer,...
+            use_socket = False
+            #inkex.debug("use_socket = False")
+        else:
+            if msg.find(b"ready") : use_socket = True
+#login was accepted; continue with socket connection (assume tm-service remote-equ is properly setup)
+            else : use_socket = False #login failed. user not defined?
+        if use_socket :
+            clientsocket.settimeout(None)
+            clientsocket.setblocking(1)
+            if IS_WINDOWS :
+                aux = self.tmp_name.replace('\\','\\\\')
+            else :
+                aux = self.tmp_name
+            msg = '(0 (remote-equ "%s" "%s"))\n' % (aux , latex)
+            clientsocket.sendall(bytes(str(len(bytes(msg,'utf8')))+ '\n'+msg,'utf8'))
+            time.sleep(.1)
+            data = clientsocket.recv(size)
+#            inkex.debug("recvd: " + str(len(data)) + " bytes")
+#            inkex.debug("recvd:" + data)
+            clientsocket.close()
+        else :
+
+# socket connection failed : texmacs not in server mode or not started.
+#
+# Then, use old method : launch it with proper args on the command line
+# and communicate through pipes.
+#
+# In that case, if texmacs has server mode enabled we want it to
+# keep running after this script quits, for subsequent connections.
+# This is straightforward on Linux/MacOs.
+#
+# However on Windows this script would hang until texmacs quits, unless
+# Texmacs runs as a completly independent process and not a subprocess of this script.
+# The next problem is that, on Windows, launching and independent process is
+# incompatible with using stdin/stdout pipes; we thus use a named pipe to know 
+# when texmacs has finished editing our first equation (sending "done" or "cancel" on stdout)
+# Since python shipped with (windows-)inkscape does not have packages for
+# handling nicely such named pipes we need to perform low level calls.
+#  
+# http://code.activestate.com/lists/python-list/446422/
+# https://mail.python.org/pipermail/python-list/2005-March/355623.html
+
+            if IS_WINDOWS :
+                import ctypes
+                PIPE_ACCESS_DUPLEX = 0x3
+                PIPE_TYPE_MESSAGE = 0x4
+                PIPE_READMODE_MESSAGE = 0x2
+                PIPE_WAIT = 0
+                PIPE_NOWAIT = 0x1
+                PIPE_UNLIMITED_INSTANCES = 255
+                BUFSIZE = 4096
+                NMPWAIT_USE_DEFAULT_WAIT = 0
+                INVALID_HANDLE_VALUE = -1
+                ERROR_PIPE_CONNECTED = 535
+
+                tmPipename = r"\\.\pipe\namedpipe1"
+
+                hPipe = ctypes.windll.kernel32.CreateNamedPipeW(tmPipename,
+                                                 PIPE_ACCESS_DUPLEX,
+                                                 PIPE_TYPE_MESSAGE |
+                                                 PIPE_READMODE_MESSAGE |
+                                                 PIPE_WAIT, PIPE_UNLIMITED_INSTANCES,
+                                                 BUFSIZE, BUFSIZE, NMPWAIT_USE_DEFAULT_WAIT,
+                                                 None
+                                                )
+                if (hPipe == INVALID_HANDLE_VALUE):
+                    inkex.debug("Error in creating Named Pipe")
+                    return
+                cmd = '"'+texmacs_path+'" -x "'+scheme_cmd+'" "'+tmp_name+'" > '+tmPipename
+                
+                #print (cmd)
+                DETACHED_PROCESS = 8
+                CREATE_NEW_PROCESS_GROUP = 512 #required for win7
+                p = subprocess.Popen(cmd, shell=True, creationflags=CREATE_NEW_PROCESS_GROUP, close_fds=True)
+                time.sleep(1)
+                fConnected = ctypes.windll.kernel32.ConnectNamedPipe(hPipe, None)
+                if ((fConnected == 0) and (ctypes.windll.kernel32.GetLastError() == ERROR_PIPE_CONNECTED)):
+                    fConnected = 1
+                if (fConnected != 1) :
+                    inkex.debug("Could not connect with "+texmacs_path+"\n using named pipe")
+                    return
+                ERROR_MORE_DATA = 234
+                BUFSIZE = 512
+                chBuf = ctypes.create_string_buffer(BUFSIZE)
+                cbRead = ctypes.c_ulong(0)
+                while 1 : # repeat loop if ERROR_MORE_DATA
+                    fSuccess = ctypes.windll.kernel32.ReadFile(hPipe, chBuf, BUFSIZE, ctypes.byref(cbRead), None)
+                    if (fSuccess == 1) :
+                        #print ("Number of bytes read:", cbRead.value)
+                        #print (chBuf.value)
+                        if ((b"done" in chBuf.value) or (b"cancel" in chBuf.value) ):
+                            break
+                    elif (ctypes.windll.kernel32.GetLastError() != ERROR_MORE_DATA):
+                        inkex.debug("error reading from named pipe")
+                        break
+                    
+                ctypes.windll.kernel32.FlushFileBuffers(hPipe)
+                ctypes.windll.kernel32.DisconnectNamedPipe(hPipe)
+                ctypes.windll.kernel32.CloseHandle(hPipe)
+
+            else : # Linux, MacOS: so much simpler!
+                cmd = [texmacs_path,"-x",scheme_cmd , self.tmp_name]
+                #try:
+                p = subprocess.Popen(cmd, 
+                                     stdout=subprocess.PIPE,
+                                     stderr=subprocess.STDOUT)
+                while p.poll() is None:
+                        output = p.stdout.readline()
+                        if ((b"done" in output) or (b"cancel" in output) ):
+                            break
+                #except OSError as e:
+                #    raise RuntimeError("Command %s failed: %s" % (' '.join(cmd), e))
+                #except :
+                #    inkex.debug("launching texmacs failed   ")
+                    
+
+    def replace_node(self, old_node, new_node):
+        """
+        Replace an XML node old_node with new_node
+        in self.document.
+        """
+        if old_node is None:
+            new_node.attrib['transform'] = "scale(0.264583333)" 
+            # 0.35277779 is 25.4/72 and this scaling is applied when inkscape *imports* an svg (or pdf) file
+            # 0.264583333 is (3/4)*25.4/72 (= 25.4/96) and this scaling is applied when inkscape *pastes* our svg from clipboard
+            # we apply it here for having consistent sizes when pasting or creating an equation using this extension
+            # if we furthermore want the font size to be "correct" we need to set the image output scale to 1.333 in texmacs
+            self.svg.get_current_layer().append(new_node)
+        else:
+        # -- Copy transform
+            try:
+                # Note: the new node does *not* have the SVG namespace prefixes!
+                #       This caused some problems as Inkscape couldn't properly
+                #       handle both svg: and prefixless entries in the same file
+                #       in some cases.
+                new_node.attrib['transform'] = old_node.attrib['transform']
+            except (KeyError, IndexError, TypeError, AttributeError):
+                pass
+            try:
+                new_node.attrib['transform'] = old_node.attrib['{%s}transform'%SVG_NS]
+            except (KeyError, IndexError, TypeError, AttributeError):
+                pass
+
+            # -- Copy style (remembering style is tricky...)
+            try:
+                new_node.attrib['style'] = old_node.attrib['style']
+            except (KeyError, IndexError, TypeError, AttributeError):
+                pass
+            try:
+                new_node.attrib['style'] = old_node.attrib['{%s}style'%SVG_NS]
+            except (KeyError, IndexError, TypeError, AttributeError):
+                pass
+
+            # replace node
+            parent = old_node.getparent()
+            parent.append(new_node)
+            parent.remove(old_node)
+
+        # -- Work around probable bugs in several viewers that don't handle
+        #    "stroke-width: 0;" style properly.
+        style = 'stroke-width: 0.0000001'
+        try:
+            xstyle = new_node.attrib['style']
+        except KeyError:
+            try:
+                xstyle = new_node.attrib['{%s}style'%SVG_NS]
+                del new_node.attrib['{%s}style'%SVG_NS]
+            except KeyError:
+                xstyle = ""
+        if 'stroke-width' not in xstyle:
+            if xstyle.strip():
+                style = xstyle + ';' + style
+        else:
+            style = xstyle
+        new_node.attrib['style'] = style
+
+
+
+    def remove_temp_files(self):
+        """Remove temporary files"""
+        base = os.path.join(self.tmp_path, self.tmp_base)
+        for filename in glob.glob(base + '*'):
+            self.try_remove(filename)
+        self.try_remove(self.tmp_path)
+
+    def try_remove(self, filename):
+        """Try to remove given file, skipping if not exists."""
+        if os.path.isfile(filename):
+            os.remove(filename)
+        elif os.path.isdir(filename):
+            os.rmdir(filename)
+
+
+#------------------------------------------------------------------------------
+# Entry point
+#------------------------------------------------------------------------------
+
+if __name__ == "__main__":
+    e = Texmacs()
+    e.run()
diff --git a/plugins/equation-editor/progs/init-equation-editor.scm b/plugins/equation-editor/progs/init-equation-editor.scm
new file mode 100644
index 00000000..eada62e5
--- /dev/null
+++ b/plugins/equation-editor/progs/init-equation-editor.scm
@@ -0,0 +1,271 @@
+;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
+;;
+;; MODULE      : init-equation-editor.scm
+;; DESCRIPTION : plugin that enables using TeXmacs as a graphical
+;;               equation editor for external programs 
+;; COPYRIGHT   : (C) 2016-2022  Philippe Joyez
+;;
+;; This software falls under the GNU general public license version 3 or later.
+;; It comes WITHOUT ANY WARRANTY WHATSOEVER. For details, see the file LICENSE
+;; in the root directory or <http://www.gnu.org/licenses/gpl-3.0.html>.
+;;
+;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
+;; This plugin enables using TeXmacs as 
+;; graphical "equation editor" which
+;; can be called from other applications
+;; (notably from within Inkscape using
+;; the "Texmacs extension" which can be installed
+;; in Inkscape from Texmacs convert->images preferences).
+;; 
+;; In this mode the equation to be edited 
+;; is loaded from a temporary tm file and displayed with 
+;; a toolbar with "done" and "cancel" buttons.
+;; When the "done" button is pressed 
+;; an updated svg image of the equation (containing the
+;; texmacs representation of the equation) is created 
+;;
+;; The external application can communicate with texmacs 
+;; (and this plugin) in two ways:
+;; a) launching texmacs with command line 
+;; options -x "(lazy-plugin-force)(equ-edit-cmdline)"
+;; (see below) and using stdin/stdout pipes
+;; b) connecting with an already running texmacs instance
+;; using texmacs' socket server feature  
+;; (enabled by the preference "equation-editor-server" 
+;; controlled in the preference>convert>image widget).
+;; Using socket communication is much faster since it
+;; spares the boot-up time of texmacs.
+;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
+;;
+;;(import-from (debug debug-menu))(debug-toggle "io")
+
+(plugin-configure equation-editor 
+  (:require #t)
+  ;;(display "config equation-editor\n")
+)
+
+;;;;;;;;;;;;
+;; plugin's code for communication and operation
+;;;;;;;;;;;;
+
+;;(when (supports-equation-editor?) (display "equation-editor plugin loaded\n"))
+
+
+;; Do (server-start) automatically at boot-up if preferences are set so
+;; to enable incoming connections
+
+(if (get-boolean-preference "equation-editor-server")
+  (begin 
+    (import-from (server server-base)) ;; define tm-service for use below
+    (with srv (client-start "localhost")
+      (if (== srv -1) 
+        (begin (display "starting server\n") (server-start))
+        (begin (display "found local server\n")(client-stop srv)
+        )))
+
+;; need a login for connecting to texmac's server
+    (server-set-user-information "inkscape" "inkscape-modify-equation" "inkscape" "" "no")
+
+;; service where inkscape connects, sending the path of a temporary file
+;; with the equation to be edited and (possibly) a latex code of the equation
+;; (for compatibility with latex-based inkscape extensions)
+    (tm-service (remote-equ file latex)
+      (set! current-envelope envelope)
+      (set! current-equ-url (system->url file))
+        ;;(display* "remote-equ envelope = " current-envelope "\n")
+        (load-buffer-in-new-window current-equ-url)
+        (if (!= latex "") 
+          (insert (latex->texmacs (parse-latex (string-append "\\[" latex "\\]")))))
+        (equ-edit-start)
+    )
+  ))
+
+
+(define (current-envelope) #f)
+(define (current-equ-url) #f)
+
+(tm-define (equ-edit-cmdline)
+  (:synopsis "Shows equation-edit toolbar in non-server mode; can be called on command line with -x \"(lazy-plugin-force)(equ-edit-cmdline)\"")
+  (set! current-envelope #f) ;;envelope shall be #f if not acting as socket server
+  (set! current-equ-url (system->url (cAr (program-arguments))))
+  (equ-edit-start))
+
+(define (equ-edit-done)
+  (begin 
+    (if (!= (current-buffer) current-equ-url) (switch-to-buffer current-equ-url))
+    (select-all)
+    (export-selection-as-graphics (url-glue current-equ-url ".svg"))
+    (if (not current-envelope) (display "done\n") (server-return current-envelope #t) )
+;; NB: when in non-server mode Inkscape watches for "done" in stdout           
+    (equ-edit-end)))
+
+(define (equ-edit-cancel)
+  (begin 
+    (if (not current-envelope ) (display "cancel\n") (server-return current-envelope  #f) )
+    (equ-edit-end)))
+
+(define (equ-edit-end) 
+  (let ((stay (get-boolean-preference "equation-editor-server"))) ;; should we keep server running ?
+;; we should also check (server-started?) but it's always false in qt-texmacs...
+        (show-icon-bar 3 #f)
+        (buffer-pretend-saved current-equ-url)
+        (if (nnot current-envelope) (server-error current-envelope  "disconnect"))  ;;how to simply disconnect that client? 
+        (if stay (begin   
+          (if (> (length (window-list)) 1)  
+              (begin (safely-kill-window) ))
+          (if (== (length (buffer-list)) 1)  
+              (begin (switch-to-buffer (buffer-new))))
+          (buffer-close current-equ-url))
+          (if (not current-envelope)  (quit) ))
+  ))
+  
+(define (equ-edit-start)
+;; ensure image export format is svg, override if not
+    (if (not (svg-converter-available))
+      (begin 
+        (show-message "You invoked TeXmacs' equation editor plugin, but it cannot operate without a converter to SVG format. See Preferences > Plugins > Equation-editor"
+        "Missing SVG converter")
+        (equ-edit-cancel ))
+      (begin 
+        (if (!= (get-preference "texmacs->image:format") "svg")
+          (begin 
+            (set-preference "texmacs->image:format" "svg")
+            ;; warn user one way or the other
+          ))
+        (equ-edit-toolbar))))
+
+
+;;;;;;;;;;;;
+;; Toolbar
+;;;;;;;;;;;;
+
+(define (equ-edit-toolbar)
+;;  "Define and displays control buttons in the toolbar"
+  (menu-bind texmacs-extra-icons 
+       ((balloon "Done" "update equation in client") (equ-edit-done ) )
+       ((balloon "Cancel" "abandon modifying equation") (equ-edit-cancel ))
+       ((check (balloon "sansSerif" "") "v" (font-sserif?)) (toggle-sserif)))
+  (show-icon-bar 3 #t))
+
+(define (font-sserif?) (== (get-init "font-family") "ss"))
+(define (toggle-sserif) 
+  (if (== (get-init "font-family") "ss") (init-default "font-family") (init-env "font-family" "ss")))
+
+;;;;;;;;;;;;
+;; settings widget and preferences
+;;;;;;;;;;;;
+
+;; is operation in socket server mode preferred?
+(define-preferences 
+  ("equation-editor-server" "on" noop)) ;; actual pref value set in preference widget
+
+(define (svg-converter-available)
+  (nnot (converter-search "pdf-file" "svg-file")))
+
+(define (inkscape-detected)
+  (if (os-mingw?) #t (url-exists-in-path? "inkscape"))) ;;no reliable way on windows
+
+(define (inkscape-prefs-dir)
+  (url-concretize (url-append (if (os-mingw?)
+  (system->url "$APPDATA") (system->url
+  "~/.config"))(string->url "inkscape"))))
+  
+(define (inkscape-extension)
+  (url-append (inkscape-prefs-dir) (string->url "extensions/texmacs.inx")))
+
+(define (inkscape-prefs-found)
+  (url-exists? (inkscape-prefs-dir)))
+
+(define (inkscape-extension-installed)
+  (url-exists? (inkscape-extension)))
+
+(define (get-svg-converter)
+  (if (os-mingw?) 
+    (show-message "pdftocairo is bundled with TeXmacs at this address: https://github.com/slowphil/mingw-w64-texmacs/releases"
+      "'pdftocairo' is needed for co-operating with Inkscape, but it is not present.")
+    (if (os-macos?) 
+      (show-message "Please install either 'pdf2svg' or 'pdftocairo' (included in poppler) from MacPorts, Fink or Homebrew"
+        "missing svg converter")
+      (show-message "Please install either 'pdf2svg' or 'pdftocairo' (included in poppler-utils) using your distribution package management system"
+        "missing svg converter"))))
+(define (start-inkscape)
+  (if (os-mingw?)
+    (show-message "Make sure Inkscape is installed on your system, and then start it once." "missing Inkscape preferences")
+    (shell "inkscape")))
+
+(define (install-inkscape-extension)
+  (let ((dest-dir (escape-shell (url-concretize 
+          (url-append 
+            (if (os-mingw?) (system->url "$APPDATA")  (system->url "~/.config"))
+            (string->url "inkscape/extensions")))))
+         (source-dir (escape-shell (url-concretize (url-unix "$TEXMACS_PATH" "plugins/equation-editor/misc/inkscape_extension/*")))))
+         (if (os-mingw?)
+           (system (string-append "copy " source-dir " " dest-dir))
+           (system (string-append "cp " source-dir " " dest-dir)))
+       (refresh-now "equ-ed-config")))
+       
+(define (install-libreoffice-extension)
+;; use OS file associations to open extension installer in libreoffice
+  (with lo-ext (escape-shell (url->string (url-complete (url-append (url-concretize (url-unix "$TEXMACS_PATH" "plugins/equation-editor/misc/")) (url-wildcard "SVG_and_Texmacs-L*.oxt")) "fr")))
+  (if (os-mingw?) 
+    (system (string-append "start \"\" " lo-ext))
+    (if (os-macos?) 
+      (system (string-append "open " lo-ext))
+      (system (string-append "xdg-open " lo-ext))))))
+      
+(define (get-equation-editor-server)
+  (get-boolean-preference "equation-editor-server"))
+
+(define (set-equation-editor-server on?)
+  (set-boolean-preference "equation-editor-server" on?)
+  (refresh-now "equ-ed-config"))
+
+(tm-widget (equation-editor-preferences-widget)
+  ======
+  (bold (centered  (text "Equation Editor for Inkscape or LibreOffice")))
+  ===
+  (refreshable "equ-ed-config"
+   (if (not (svg-converter-available))
+    (hlist  (text "Svg converter not available") >>> 
+                 
+                                         (explicit-buttons ("get converter" (get-svg-converter))) //
+                 (explicit-buttons ("Help" (load-help-buffer (url-resolve (url-glue (string->url "$TEXMACS_DOC_PATH") "/main/convert/man-graphics-export.en.tm") "r"))))))
+         
+  (if (svg-converter-available) 
+  ======
+  (bold (text "Inkscape"))
+  ===        
+        ;; tests in "assuming" not refreshed, must use "if" construct instead         
+    (if (not (inkscape-detected)) 
+           (centered (text "Inkscape not detected") ))
+    (if (and (inkscape-detected) (not (inkscape-prefs-found)))
+      (aligned (meti (hlist  // (text "Inkscape user prefs found") >>> 
+          (if (not (inkscape-prefs-found))
+            (explicit-buttons (
+                          (eval (if (os-mingw?) "help" "create (start Inkscape)"))
+                (start-inkscape))) ))
+          (inert (toggle (noop) (inkscape-prefs-found))))))
+    (if (and (inkscape-detected) (inkscape-prefs-found) (svg-converter-available))
+      (aligned (meti (text "Inkscape extension installed")           
+            (inert (toggle (noop) (inkscape-extension-installed)))))
+      ===
+  (centered  (explicit-buttons ("install/update extension" (install-inkscape-extension)) ) ))
+    ======
+  (bold (text "LibreOffice"))
+  ===        
+   (centered (explicit-buttons ("install/update LibreOffice extension" (install-libreoffice-extension)) ) )
+  ===
+   (centered (text "-------------------------------------"))
+  ===
+    (aligned (meti (hlist  // (text "Enable socket communications (faster)"))              
+            (toggle (set-equation-editor-server answer)
+              (get-equation-editor-server))))
+  )
+  )
+
+  ======
+      (centered
+       (hlist  /// (explicit-buttons ("Refresh" (refresh-now "equ-ed-config")))
+           /// (explicit-buttons ("Help" (load-help-buffer (url-resolve (url-glue (string->url "$TEXMACS_PATH") "plugins/equation-editor/doc/man-equation-editor.en.tm") "r"))))))
+
+)
diff --git a/src/System/Boot/init_texmacs.cpp b/src/System/Boot/init_texmacs.cpp
index 26e13703..9a0d8f98 100644
--- a/src/System/Boot/init_texmacs.cpp
+++ b/src/System/Boot/init_texmacs.cpp
@@ -404,30 +404,6 @@ init_misc () {
 
 }
 
-static void
-setup_inkscape_extension () {
-debug_boot << "attempt install of inkscape extension \n ";
-#ifdef OS_MINGW
-  url ink_ext = url ("$APPDATA/inkscape/extensions");
-#else
-  url ink_ext = "~/.config/inkscape/extensions/";
-#endif 
-  if ( exists (ink_ext)) {
-    url f1 = url (ink_ext * "texmacs.inx");
-    url f2 = url (ink_ext * "texmacs_reedit.py");
-    url f3 = url (ink_ext * "texmacs_latex.sty");
-    url plug_source = url ("$TEXMACS_PATH/misc/inkscape_extension/");
-    debug_boot << "installing or updating inkscape extension\n";
-    copy (url (plug_source * "texmacs.inx"), f1);
-    copy (url (plug_source * "texmacs_reedit.py"), f2);
-    copy (url (plug_source * "texmacs_latex.sty"), f3);
-    if (!(exists (f1) && exists (f2))) {
-      debug_boot << "automatic install of inkscape extension failed\n; ";
-      debug_boot << "see documentation for manual install\n";
-    }
-  }
-}
-
 /******************************************************************************
 * Deprecated initializations
 ******************************************************************************/
@@ -483,7 +459,6 @@ setup_texmacs () {
 
   set_setting ("VERSION", TEXMACS_VERSION);
   setup_tex ();
-  setup_inkscape_extension ();
   
   string s= scheme_tree_to_block (texmacs_settings);
   //cout << "settings_t= " << texmacs_settings << "\n";
-- 
2.17.1

