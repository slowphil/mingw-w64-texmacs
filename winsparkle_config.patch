Index: TeXmacs/progs/prog/glue-symbols.scm
===================================================================
--- TeXmacs/progs/prog/glue-symbols.scm	(revision 12385)
+++ TeXmacs/progs/prog/glue-symbols.scm	(copie de travail)
@@ -34,6 +34,8 @@
 "updater-check-background"
 "updater-check-foreground"
 "updater-last-check"
+"updater-set-appcast"
+"updater-set-pub-key"
 "updater-set-interval"
 "get-original-path"
 "os-win32?"
Index: TeXmacs/progs/utils/misc/updater.scm
===================================================================
--- TeXmacs/progs/utils/misc/updater.scm	(revision 12385)
+++ TeXmacs/progs/utils/misc/updater.scm	(copie de travail)
@@ -18,16 +18,26 @@
 ;; Preference management
 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 
+(define-preferences
+  ("updater:appcast" "https://raw.githubusercontent.com/slowphil/mingw-w64-texmacs/master/appcast.xml" noop)
+  ; dsa key ignored by Sparkle (set in Info.plist), used by WinSparkle
+  ("updater:public-dsa-key" "$TEXMACS_PATH/misc/updater_key/slowphil_github_texmacs_updates_dsa_pub.pem" noop)
+  ("updater:interval" "168" noop))
+
+
 (tm-define (updater-initialize)
   (when (updater-supported?)
 	(with n (get-preference "updater:interval")
 	      (when (string-number? n)
 		    (updater-set-interval (string->number n))
+        (updater-set-appcast (get-preference "updater:appcast"))
+        (updater-set-pub-key (get-preference"updater:public-dsa-key"))
 		    (updater-check-background)))))
 
-(define-preferences
-  ("updater:interval" "null" noop))
 
+;(define-preferences
+;  ("updater:interval" "null" noop))
+
 ;; Uncomment to allow automatic updates
 ;(when (== (get-preference "updater:interval" "null"))
 ;    (set-preference "updater:interval" "168"))
Index: misc/m4/tm_subversion.m4
===================================================================
--- misc/m4/tm_subversion.m4	(revision 12385)
+++ misc/m4/tm_subversion.m4	(copie de travail)
@@ -11,10 +11,20 @@
 #
 #--------------------------------------------------------------------
 
+#--------------------------------------------------------------------
+# Retrieve SVN revision number from working dir or fallback file
+#--------------------------------------------------------------------
+
 AC_DEFUN([TM_SUBVERSION],[
   AC_MSG_CHECKING(current Subversion revision number)
   SVNREV=`svnversion -n . 2>/dev/null`
- if { test "$SVNREV" = "" || test "$SVNREV" = "exported" ; } ; then 
+  SVNREV=${SVNREV/:/_}
+  if test "$(echo $SVNREV | tr -cd [[:digit:]])" = "" ; 
+  then #contains no digit -> invalid
+  # maybe it was a git mirror repo? (needs git-svn)
+    SVNREV=`git svn log --oneline -1 2>/dev/null | cut -d '|' -f1`
+  fi
+  if test "$(echo $SVNREV | tr -cd [[:digit:]])" = "" ; then
     SVNREV=`cat $srcdir/SVNREV`
     AC_MSG_RESULT($SVNREV, read from $srcdir/SVNREV)
   else 
Index: packages/windows/TeXmacs.iss.in
===================================================================
--- packages/windows/TeXmacs.iss.in	(revision 12385)
+++ packages/windows/TeXmacs.iss.in	(copie de travail)
@@ -8,16 +8,16 @@
 DefaultDirName={commonpf32}\TeXmacs
 DefaultGroupName=TeXmacs
 ;denis begin
-VersionInfoTextVersion=@DEVEL_VERSION@
+VersionInfoTextVersion=@DEVEL_VERSION@.@SVNREV@
 AppPublisher=MAGIX
 AppPublisherURL=http://www.texmacs.org/
-AppVersion=@DEVEL_VERSION@
+AppVersion=@DEVEL_VERSION@.@SVNREV@
 LicenseFile=..\..\..\distr\TeXmacs-Windows\LICENSE
 ;denis end
 
 UninstallDisplayIcon={app}\TeXmacs.ico
 OutputDir=..\..\..\distr\windows
-OutputBaseFilename=@tm_devel@-installer
+OutputBaseFilename=@tm_devel@.@SVNREV@-win-x86
 ; SourceDir=../..
 ChangesAssociations=yes
 
Index: packages/windows/resource.rc.in
===================================================================
--- packages/windows/resource.rc.in	(revision 12385)
+++ packages/windows/resource.rc.in	(copie de travail)
@@ -30,7 +30,7 @@
       VALUE "OriginalFilename", "texmacs.exe\0"
       VALUE "LegalCopyright", "Licensed under GPLv3\0"
       VALUE "ProductName", "TeXmacs\0"
-      VALUE "ProductVersion", "@DEVEL_VERSION@\0"
+      VALUE "ProductVersion", "@DEVEL_VERSION@.@SVNREV@\0"
     END
   END
 
Index: src/Plugins/Updater/tm_updater.cpp
===================================================================
--- src/Plugins/Updater/tm_updater.cpp	(revision 12385)
+++ src/Plugins/Updater/tm_updater.cpp	(copie de travail)
@@ -24,6 +24,13 @@
 {
   static tm_updater* _instance = NULL;
   
+  url appcast = get_preference ("updater:appcast");
+  if (appcast == "default") {
+    if (DEBUG_STD)
+      cout << "Updater] ERROR: no appcast URL was set in the preferences.\n";
+    return 0;
+  }
+
   if (! _instance) {
     #if defined (OS_MACOS) && defined (USE_SPARKLE)
       _instance = new tm_sparkle ();
@@ -70,6 +77,18 @@
   return updater && updater->checkInForeground();
 }
 
+bool updater_set_appcast (url appcast)
+{
+  tm_updater* updater = tm_updater::instance ();
+  return updater && updater->setAppcast (appcast);
+}
+
+bool updater_set_pub_key (url pubkey)
+{
+  tm_updater* updater = tm_updater::instance ();
+  return updater && updater->setPubkey (pubkey);
+}
+
 bool updater_set_interval (int hours)
 {
   tm_updater* updater = tm_updater::instance ();
Index: src/Plugins/Updater/tm_updater.hpp
===================================================================
--- src/Plugins/Updater/tm_updater.hpp	(revision 12385)
+++ src/Plugins/Updater/tm_updater.hpp	(copie de travail)
@@ -38,6 +38,9 @@
   virtual time_t lastCheck () const { return 0; }
   virtual bool getCheckInterval () const { return interval; }
   virtual bool setCheckInterval (int hours) { (void) hours; return false; }
+  virtual url  getAppcast () const { return appcast; }
+  virtual bool setAppcast (url _appcast) { (void) _appcast; return false; }
+  virtual bool setPubkey (url pubkey) { (void) pubkey; return false; }
 };
 
 
@@ -49,6 +52,8 @@
 bool updater_is_running ();
 bool updater_check_background ();
 bool updater_check_foreground ();
+bool updater_set_appcast (url appcast);
+bool updater_set_pub_key (url pubkey);
 bool updater_set_interval (int hours);
 time_t updater_last_check ();
 
Index: src/Plugins/Updater/tm_winsparkle.cpp
===================================================================
--- src/Plugins/Updater/tm_winsparkle.cpp	(revision 12385)
+++ src/Plugins/Updater/tm_winsparkle.cpp	(copie de travail)
@@ -15,16 +15,44 @@
 
 #include "tm_winsparkle.hpp"
 #include "string.hpp"
+#include "file.hpp"
 #include <winsparkle.h>
 
+/*/ constructor initializes winsparkle 
+tm_winsparkle::tm_winsparkle (void) {
+   win_sparkle_init();
+}*/
+
 tm_winsparkle::~tm_winsparkle ()
 {
   win_sparkle_cleanup();
 }
 
+bool tm_winsparkle::setAppcast (url _appcast_url)
+{
+  if (appcast == _appcast_url) return true;
+  
+  appcast = _appcast_url;
+  c_string s (as_string (_appcast_url));  // FIXME! This has to be UTF8!
+  win_sparkle_set_appcast_url (s);
+  
+  return true;
+}
+   // Set DSA public key used to verify update's signature.
+    // This is na example how to provide it from external source (i.e. from Qt
+    // resource). See the "psdk" example and its .rc file for an example how to
+    // provide the key using Windows resource.
+  //
+bool tm_winsparkle::setPubkey (url pubkey)
+{
+  string s;
+  load_string (pubkey, s, false);
+  return (win_sparkle_set_dsa_pub_pem(c_string(s))==1);
+}
+
+
 bool tm_winsparkle::setCheckInterval (int hours)
 {
-  if (running) return false;
   interval = hours <= 0 ? 0
     : max (MinimumCheckInterval, min (MaximumCheckInterval, hours));
   win_sparkle_set_update_check_interval (interval * 3600);
@@ -41,9 +69,7 @@
 {
   // WinSparkle docs state that configuration must be finished before the first
   // call to win_sparkle_init(), so we block any further attempts to change it.
-  if (running || interval <= 0) return false;
-  running = true;
-  win_sparkle_init();
+  if (interval <= 0) return false;
   win_sparkle_check_update_without_ui();
   return true;
 }
@@ -50,11 +76,9 @@
 
 bool tm_winsparkle::checkInForeground ()
 {
-  if (running) return false;
-  running = true;
-  win_sparkle_init();
   win_sparkle_check_update_with_ui();
   return true;
 }
 
 #endif  // defined (USE_SPARKLE) && defined (OS_MINGW)
+
Index: src/Plugins/Updater/tm_winsparkle.hpp
===================================================================
--- src/Plugins/Updater/tm_winsparkle.hpp	(revision 12385)
+++ src/Plugins/Updater/tm_winsparkle.hpp	(copie de travail)
@@ -9,12 +9,13 @@
  ******************************************************************************/
 
 #include "tm_updater.hpp"
+#include <winsparkle.h>
 
 class tm_winsparkle : public tm_updater
 {
-  bool running;
+//  bool running;
   
-  tm_winsparkle () : tm_updater (), running (false) { }
+  tm_winsparkle () : tm_updater () { win_sparkle_init();}
   ~tm_winsparkle ();
   friend class tm_updater;
 
@@ -21,8 +22,9 @@
 public:
   bool checkInBackground ();
   bool checkInForeground ();
-  bool isRunning () const { return running; }
+  //bool isRunning () const { return running; }
   time_t lastCheck () const;
   bool setCheckInterval (int hours);
   bool setAppcast (url _appcast_url);
+  bool setPubkey (url pubkey);
 };
Index: src/Scheme/Glue/build-glue-basic.scm
===================================================================
--- src/Scheme/Glue/build-glue-basic.scm	(revision 12385)
+++ src/Scheme/Glue/build-glue-basic.scm	(copie de travail)
@@ -24,6 +24,8 @@
   (updater-check-background updater_check_background (bool))
   (updater-check-foreground updater_check_foreground (bool))
   (updater-last-check updater_last_check (long))
+  (updater-set-appcast updater_set_appcast (bool url))
+  (updater-set-pub-key updater_set_pub_key (bool url))
   (updater-set-interval updater_set_interval (bool int))
   (get-original-path get_original_path (string))
   (os-win32? os_win32 (bool))
Index: src/Scheme/Glue/glue_basic.cpp
===================================================================
--- src/Scheme/Glue/glue_basic.cpp	(revision 12385)
+++ src/Scheme/Glue/glue_basic.cpp	(copie de travail)
@@ -85,6 +85,32 @@
 }
 
 tmscm
+tmg_updater_set_appcast (tmscm arg1) {
+  TMSCM_ASSERT_URL (arg1, TMSCM_ARG1, "updater-set-appcast");
+
+  url in1= tmscm_to_url (arg1);
+
+  // TMSCM_DEFER_INTS;
+  bool out= updater_set_appcast (in1);
+  // TMSCM_ALLOW_INTS;
+
+  return bool_to_tmscm (out);
+}
+
+tmscm
+tmg_updater_set_pub_key (tmscm arg1) {
+  TMSCM_ASSERT_URL (arg1, TMSCM_ARG1, "updater-set-pub-key");
+
+  url in1= tmscm_to_url (arg1);
+
+  // TMSCM_DEFER_INTS;
+  bool out= updater_set_pub_key (in1);
+  // TMSCM_ALLOW_INTS;
+
+  return bool_to_tmscm (out);
+}
+
+tmscm
 tmg_updater_set_interval (tmscm arg1) {
   TMSCM_ASSERT_INT (arg1, TMSCM_ARG1, "updater-set-interval");
 
@@ -9875,6 +9901,8 @@
   tmscm_install_procedure ("updater-check-background",  tmg_updater_check_background, 0, 0, 0);
   tmscm_install_procedure ("updater-check-foreground",  tmg_updater_check_foreground, 0, 0, 0);
   tmscm_install_procedure ("updater-last-check",  tmg_updater_last_check, 0, 0, 0);
+  tmscm_install_procedure ("updater-set-appcast",  tmg_updater_set_appcast, 1, 0, 0);
+  tmscm_install_procedure ("updater-set-pub-key",  tmg_updater_set_pub_key, 1, 0, 0);
   tmscm_install_procedure ("updater-set-interval",  tmg_updater_set_interval, 1, 0, 0);
   tmscm_install_procedure ("get-original-path",  tmg_get_original_path, 0, 0, 0);
   tmscm_install_procedure ("os-win32?",  tmg_os_win32P, 0, 0, 0);
